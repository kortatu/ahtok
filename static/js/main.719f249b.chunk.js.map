{"version":3,"sources":["Utils.ts","tok/Token.ts","tok/TokenSpan.tsx","tok/ParamChanger.tsx","AppActions.ts","tok/SkillTestChanger.tsx","tok/PassZone.tsx","tok/CharacterSelector.tsx","AppState.ts","tok/Scenario.ts","tok/ContextManager.tsx","tok/TokenBag.tsx","tok/ScenarioPassZone.tsx","tok/AHCharacter.ts","tok/ElCirculoRoto.ts","tok/Campaign.ts","AppReducers.ts","AppStore.ts","App.tsx","I18n.tsx","TokTheme.ts","serviceWorker.ts","index.tsx"],"names":["incDecNatural","previous","incDec","Math","max","tokenSpecDef","value","count","chaos","name","actualName","id","uuid","copyTokenSpec","tokenSpec","findName","tokenBagSpec","tokens","find","t","removeToken","tokenName","newBag","map","ts","tokenSpecInBag","filter","addTokens","forEach","push","buildBagSpec","incDecContextNatural","state","key","buildEffectSpecs","effectMap","Map","effectSpecs","ns","set","effect","buildBagFromSpec","bagSpec","effects","character","context","tokenDef","get","FALLO_AUTOMATICO","sortTokens","tokenBag","sort","a","b","tokenFloatAverage","numOfTokens","reduce","sum","token","tokenAverage","floatAverage","floor","accumulated","previousValues","last","length","undefined","histogram","prev","curr","prevValue","concat","seal","tokensFiltered","decCount","tokenBagPassZone","accum","total","vc","prob","sorted","i","j","tokensWithValue","passZoneLines","tokenBagMap","skill","test","lines","stillPass","result","pass","nextPass","currentProb","firstFail","TokenSpan","props","useState","fadeIn","setFadeIn","Fade","in","onExited","onClick","style","cursor","className","fadeOut","fadeOutFadeIn","ContextValueChanger","valueSpec","useTranslation","type","NumericParamChanger","inline","currentValue","incValue","incDecContextValue","decValue","BooleanParamChanger","toggle","toggleContextValue","incDecStyle","verticalAlign","InputLabel","IconButton","_","Switch","checked","onChange","color","inputProps","changeSkill","changeTest","CurrentSkillTestChanger","connect","skillTest","dispatch","incSkill","decSkill","incTest","decTest","Typography","variant","CurrentPassZone","ownProps","passZone","Grid","container","alignItems","item","xs","sm","md","direction","line","PassLine","textAlign","lineSeparator","liStyle","borderColor","spacing","toFixed","noWrap","index","useStyles","makeStyles","theme","createStyles","formControl","margin","minWidth","selectEmpty","marginTop","CurrentCharacterSelector","selectedCharacter","characters","selectedCampaign","setCharacter","changeCharacter","FormControl","Select","labelId","shortName","e","target","c","aChar","MenuItem","buildBagFromState","appState","selectedScenario","scenarioEffectSpec","gameContext","initContext","contextSpec","valuesSpec","vs","initialValue","CurrentScenarioContextManager","spec","paddingTop","Object","keys","contextKey","BagDisplay","showAverage","fadeOutTokens","bag","allTokensIndividually","allTokens","CurrentTokenBagManager","addToken","classes","useModalStyles","allKnown","Box","paper","BagSpecDisplay","position","left","top","width","opacity","backgroundColor","palette","background","border","boxShadow","shadows","padding","CurrentScenarioPassZone","scenario","open","setOpen","Modal","onClose","aria-labelledby","Button","AHCharacters","JoeDiamond","elderSignEffect","DianaStanley","normal","EnLasGarrasDelCaos","getPerdicionYBrecha","translations","potentialBag","description","AnteElTronoNegro","ceil","getHalfDoomInAzathot","buildElCirculoRotoCampaignSpec","scenarios","bagSpecsByLevel","easy","hard","expert","startAlvaroElCirculoRotoLPDP","level","campaign","Campaign","start","addTokensToBagSpec","startCampaign","Campaigns","TheCircleUndone","campaignTranslations","values","allTrans","thisTranslations","lang","scenarioLang","valueSpecLang","campaignSpec","currentBagSpec","currentScenario","this","scenarioNum","scenarioIndex","getScenarioSpec","defaultCampaign","firstScenario","initialContext","initialSkillTest","appReducers","combineReducers","action","nextScenario","prevScenario","tokenAction","scenarioSpec","contextAction","assign","contextToggleAction","skillTestAction","preloadCampaign","storageStateString","localStorage","getItem","JSON","parse","loadStorageStage","campaignSpecId","cId","currentCharacter","currentContext","currentScenarioSpec","initialState","store","createStore","saveLang","setItem","window","location","reload","subscribe","getState","newStorageCampaign","stringify","Flags","require","App","changeScenario","myLang","appLang","userLang","navigator","language","dashPosition","indexOf","substring","loadCurrentLang","i18","use","initReactI18next","init","resources","es","translation","lng","fallbackLng","I18n","themeSpec","baseFontFamily","uglyQuaFontFamily","responsiveFontSizes","createMuiTheme","typography","fontFamily","join","fontSize","tonalOffset","primary","main","secondary","headerFontFamily","headerFontFamilyNonAscii","tokTheme","campaignName","ThemeProvider","CssBaseline","aString","variantMapping","h1","float","GB","ES","Container","maxWidth","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.719f249b.chunk.js","sourcesContent":["export function incDecNatural(previous: number, incDec: boolean) {\n    return incDec ? previous + 1 : Math.max(0, previous - 1);\n}\n\nexport function repeat(num: number, f: () => void) {\n    for (let i = 0; i < num; i++) {\n        f();\n    }\n}\n\nexport function repeatMap<T>(num: number, f: (index: number) => T): T[] {\n    const list = []\n    for (let i = 0; i < num; i++) {\n        list.push(f(i));\n    }\n    return list;\n}\n\nexport function nonAscii(aString: string) {\n    const ascii = /^[ -~]+$/;\n    return !ascii.test(aString);\n}\n\nexport interface Translation {\n    [k: string]: string\n}\n","import {AHCharacter} from \"./AHCharacter\";\nimport {incDecNatural} from \"../Utils\";\nimport * as uuid from \"uuid\";\n\nexport interface TokenSpec {\n    id: string;\n    value: number,\n    count: number,\n    name: string,\n    chaos: boolean\n}\nexport type EffectSpec = (tokenBag: TokenBag) => number;\n\nexport interface Token extends TokenSpec {\n    effect: EffectSpec;\n}\n\nexport function tokenSpecDef(value: number, count: number, chaos = false, name?: string): TokenSpec {\n    const actualName = name ?? \"Token\" + value;\n    return {\n        value, count, chaos,\n        name: actualName,\n        id: actualName + \"_\" + uuid.v4()\n    }\n}\n\nfunction copyTokenSpec(tokenSpec: TokenSpec): TokenSpec {\n    return {\n        ...tokenSpec\n    }\n}\n\nfunction decCount(t: Token) {\n    return {...t, count: t.count - 1};\n}\n\nexport interface TokenBagSpec {\n    tokens: TokenSpec[];\n}\n\nfunction findName(tokenBagSpec: TokenBagSpec, name: string): TokenSpec | undefined {\n    return tokenBagSpec.tokens.find(t => t.name === name);\n}\n\nexport function removeToken(tokenBagSpec: TokenBagSpec, tokenName: string): TokenBagSpec {\n    const newBag = {\n        tokens: tokenBagSpec.tokens.map(ts => copyTokenSpec(ts))\n    }\n    const tokenSpecInBag = findName(newBag, tokenName);\n    if (tokenSpecInBag) {\n        tokenSpecInBag.count-=1;\n    }\n    newBag.tokens = newBag.tokens.filter(ts => ts.count > 0);\n    return newBag;\n}\n\nexport function addTokens(tokenBagSpec: TokenBagSpec, ...tokens: TokenSpec[]): TokenBagSpec {\n    const newBag = {\n        tokens: tokenBagSpec.tokens.map(ts => copyTokenSpec(ts))\n    }\n    tokens.forEach(tokenSpec => {\n        const tokenSpecInBag = findName(newBag, tokenSpec.name);\n        if (tokenSpecInBag) {\n            tokenSpecInBag.count += tokenSpec.count\n        } else {\n            newBag.tokens.push(tokenSpec);\n        }\n    })\n    return newBag;\n}\n\n\nexport function buildBagSpec(...tokens: TokenSpec[]): TokenBagSpec {\n    return {tokens}\n}\n\nexport function allTokenSpecs(bagSpec: TokenBagSpec): TokenSpec[] {\n    const allTokensIndividually: TokenSpec[] = [];\n    bagSpec.tokens.forEach( t => {\n        for(let i = 0; i < t.count; i++) allTokensIndividually.push({...t, count: 1});\n    })\n    return allTokensIndividually;\n}\n\nexport function allKnownTokens(): TokenBagSpec {\n    return buildBagSpec(\n        tokenSpecDef(2, 1, false, 'elderSign'),\n        tokenSpecDef(1, 1, false),\n        tokenSpecDef(0, 1, false),\n        tokenSpecDef(-1, 1, false),\n        tokenSpecDef(-2, 1, false),\n        tokenSpecDef(-3, 1, false),\n        tokenSpecDef(-4, 1, false),\n        tokenSpecDef(-5, 1, false),\n        tokenSpecDef(-6, 1, false),\n        // tokenSpecDef(-7, 1, false),\n        tokenSpecDef(-8, 1, false),\n        // tokenSpecDef(-9, 1, false),\n        tokenSpecDef(0, 1, true, 'Calavera'),\n        tokenSpecDef(0, 1, true, 'Sectario'),\n        tokenSpecDef(0, 1, true, 'Lápida'),\n        tokenSpecDef(0, 1, true, 'Antiguo'),\n        FALLO_AUTOMATICO\n    );\n}\n\nexport type ScenarioContext = { [key: string]: number|boolean };\nexport function incDecContextNatural(state: ScenarioContext, key: string, incDec: boolean) {\n    return incDecNatural(state[key] as number, incDec);\n}\nexport function incContextValue(context: ScenarioContext, key: string): ScenarioContext {\n    const newValue: number = ((context[key] as number) ?? 0) + 1;\n    const newContext = {\n        ...context,\n        [key]: newValue\n    }\n    return newContext;\n}\n\nexport function decContextValue(context: ScenarioContext, key: string): ScenarioContext {\n    let oldValue: number = (context[key] as number) ?? 0;\n    let newContext = context;\n    if (oldValue > 0) {\n        const newValue = oldValue - 1;\n        newContext = {\n            ...context,\n            [key]: newValue\n        }\n    }\n    return newContext;\n}\n\nexport function toggleContextValue(context: ScenarioContext, key: string): ScenarioContext {\n    const oldValue = context[key] as boolean;\n    return {\n        ...context,\n        [key]: !oldValue\n    };\n}\n\nexport interface TokenBag {\n    context: ScenarioContext;\n    character: AHCharacter;\n    tokens: Token[];\n}\n\nexport type ScenarioEffectSpecs = { name: string, effect: EffectSpec }[];\n\nexport function buildEffectSpecs(...effectSpecs: ScenarioEffectSpecs): Map<string, EffectSpec> {\n    const effectMap = new Map<string, EffectSpec>();\n    effectSpecs.forEach( ns => effectMap.set(ns.name, ns.effect));\n    return effectMap;\n}\n\nexport function buildBagFromSpec(bagSpec: TokenBagSpec, effects: Map<string, EffectSpec>, character: AHCharacter, context: ScenarioContext): TokenBag {\n    return {\n        character,\n        context,\n        tokens: bagSpec.tokens.map(tokenSpec => tokenDef(tokenSpec, effects.get(tokenSpec.name)))\n    }\n}\n\n\n\nexport function tokenDef(tokenSpec: TokenSpec, effect?: EffectSpec): Token {\n    return {\n        ...tokenSpec,\n        effect: effect ?? (() => tokenSpec.value),\n    }\n}\n\nconst FALLO_AUTOMATICO_VALUE = -99\n\nexport const FALLO_AUTOMATICO = tokenSpecDef(FALLO_AUTOMATICO_VALUE, 1, true, \"Fallo\");\n\nfunction sortTokens(tokenBag: TokenBag) {\n    return tokenBag.tokens.sort((a, b) => b.effect(tokenBag) - a.effect(tokenBag));\n}\n\nexport function tokenFloatAverage(tokenBag: TokenBag) {\n    const tokens = tokenBag.tokens;\n    let numOfTokens = 0;\n    const total = tokens.reduce<number>((sum, token) => {\n        if (token.value !== FALLO_AUTOMATICO_VALUE) {\n            numOfTokens += token.count;\n            return sum + (token.effect(tokenBag) * token.count)\n        } else {\n            return sum;\n        }\n    }, 0);\n    return total / numOfTokens;\n}\n\nexport function tokenAverage(tokenBag: TokenBag): number {\n    const floatAverage = tokenFloatAverage(tokenBag);\n    return Math.floor(floatAverage);\n}\n\ninterface ValueCount {\n    value: number;\n    count: number;\n}\n\nexport function tokensWithValue(tokenBag: TokenBag, value: number): Token[] {\n    const tokens = [];\n    const sorted = sortTokens(tokenBag);\n    let i = 0;\n    while (i < sorted.length && sorted[i].effect(tokenBag) >= value) {\n        if (sorted[i].effect(tokenBag) === value) {\n            for (let j=0; j < sorted[i].count; j++) {\n                tokens.push(sorted[i]);\n            }\n        }\n        i++;\n    }\n    return tokens;\n}\n\nexport function histogram(tokenBag: TokenBag) {\n    return sortTokens(tokenBag).reduce<ValueCount[]>((previousValues: ValueCount[], token: Token) => {\n        const last = previousValues.length >= 1 ? previousValues[previousValues.length - 1] : undefined;\n        if (last && last.value === token.effect(tokenBag)) {\n            last.count = last.count + token.count;\n        } else {\n            previousValues.push({value: token.effect(tokenBag), count: token.count});\n        }\n        return previousValues;\n    }, []);\n}\n\nexport function accumulated(tokenBag: TokenBag) {\n    return histogram(tokenBag).reduce<ValueCount[]>((prev, curr: ValueCount) => {\n        const prevValue = prev.length > 0 ? prev[prev.length - 1].count : 0;\n        return prev.concat({value: curr.value, count: curr.count + prevValue});\n    }, []);\n}\n\n\n\nexport function sealAll(tokenBag: TokenBag, tokenName: string): TokenBag {\n    const tokensFiltered: Token[] = tokenBag.tokens.map(t => {\n        return t.name !== tokenName ? t : null\n    }).filter(t => t !== null) as Token[];\n    return {\n        ...tokenBag,\n        tokens: tokensFiltered,\n    }\n}\n\nexport function seal(tokenBag: TokenBag, tokenName: string): TokenBag {\n    const tokensFiltered = tokenBag.tokens.map(t => {\n        return t.name !== tokenName ? t : decCount(t)\n    }).filter(t => t.count > 0)\n    return {\n        ...tokenBag,\n        tokens: tokensFiltered\n    }\n}\n\nexport function allTokens(bag: TokenBag): Token[] {\n    const allTokensIndividually: Token[] = [];\n    bag.tokens.forEach( t => {\n        for(let i = 0; i < t.count; i++) allTokensIndividually.push({...t, count: 1, id: t.id + \"_\" + i});\n    })\n    return allTokensIndividually;\n}\n\n\n// TokenBagPassZone\nexport interface WithTokenBag {\n    tokenBag: TokenBag;\n}\nexport interface ITokensInPassLine {\n    tokens: Token[];\n    prob: number;\n}\nexport type TokenBagPassZone = Map<number, ITokensInPassLine> & WithTokenBag;\nexport function tokenBagPassZone(tokenBag: TokenBag): TokenBagPassZone {\n    const accum = accumulated(tokenBag);\n    const map = new Map<number, ITokensInPassLine>() as TokenBagPassZone;\n    map.tokenBag = tokenBag;\n    const total = accum[accum.length - 1].count;\n    accum.forEach(vc => {\n        if (vc.value !== FALLO_AUTOMATICO_VALUE) {\n            const prob = 100 * vc.count / total;\n            const tokens = tokensWithValue(tokenBag, vc.value);\n            map.set(vc.value, {tokens, prob});\n        }\n    });\n    return map;\n}\n\nexport interface ISkillLine {\n    key: number;\n    tokens: Token[];\n    prob: number;\n    pass: boolean;\n    firstFail: boolean;\n    currentProb: boolean;\n}\n\nexport function passZoneLines(tokenBagMap: TokenBagPassZone, skill: number, test: number): ISkillLine[] {\n    const lines: ISkillLine[] = [];\n    let stillPass = true;\n    tokenBagMap.forEach((value, key) => {\n        const result = Math.max(skill+key, 0);\n        const pass = result >= test;\n        const nextPass = Math.max(result -1, 0) >= test;\n        const currentProb = pass && !nextPass;\n        const firstFail = !pass && stillPass;\n        stillPass = pass;\n        lines.push({\n            key,\n            tokens: value.tokens,\n            prob: value.prob,\n            pass,\n            firstFail,\n            currentProb\n        });\n    });\n    return lines;\n}\n\nexport function printSkillLine(tokenBagMap: TokenBagPassZone, skill: number, test: number): string {\n    let output = \"\";\n    output+=\"******************\\n\";\n    output+=`Skill: ${skill}, Test: ${test}\\n`;\n    output+=\"******************\\n\";\n    const lines = passZoneLines(tokenBagMap, skill, test);\n    lines.forEach(line => {\n        const keyFormat = line.key.toString().padStart(2, \" \");\n        if (line.firstFail) {\n            output+=\"------------------\\n\";\n        }\n        output+=`${keyFormat} => ${line.prob.toFixed(2)}% ${line.currentProb ? \"<----\":\"     \"}`;\n        output+=\"[\" + line.tokens.map(t => t.name).join(',') + \"]\\n\";\n    });\n    output+=\"******************\\n\";\n    return output;\n}\n\nexport function nnDec(nn: number): number {\n    return Math.max(nn -1 , 0);\n}\n\n\n","import {TokenSpec} from \"./Token\";\nimport React, {useState} from \"react\";\nimport {Fade} from \"@material-ui/core\";\n\nexport function TokenSpan(props: {token: TokenSpec, onClick?: (token: TokenSpec) => void, fadeOut?: boolean, fadeOutFadeIn?: boolean}){\n    const [fadeIn, setFadeIn] = useState(true);\n    const handler = () => {\n        if (props.onClick) {\n            if (props.fadeOut || props.fadeOutFadeIn) {\n                setFadeIn(false);\n            } else {\n                props.onClick(props.token);\n            }\n        }\n    };\n    const fadeExitedHandler = () => {\n        if (props.onClick) {\n            props.onClick(props.token);\n        }\n        // if (props.fadeOutFadeIn) {\n            setFadeIn(true);\n        // }\n    }\n    return (\n        <Fade in={fadeIn} onExited={fadeExitedHandler}>\n            <span style={{cursor: \"pointer\"}} className={\"Token \" + props.token.name} onClick={handler}>T</span>\n        </Fade>\n    )\n}","import React from \"react\";\nimport {IContextValueSpec} from \"./Scenario\";\nimport {IconButton, InputLabel, Switch} from \"@material-ui/core\";\nimport {useTranslation} from \"react-i18next\";\n\nexport function ContextValueChanger(props: {\n    currentValue: number | boolean, valueSpec: IContextValueSpec, incDecContextValue: (incDec: boolean) => void, toggleContextValue: () => void}) {\n    const valueSpec = props.valueSpec;\n    const { t } = useTranslation();\n    if (valueSpec.type === \"number\") {\n        return (\n            <NumericParamChanger inline={false} name={t(valueSpec.name)} currentValue={props.currentValue as number}\n                                 incValue={() => props.incDecContextValue(true)}\n                                 decValue={() => props.incDecContextValue(false)} />\n        )\n    } else {\n        return (\n            <BooleanParamChanger name={t(valueSpec.name)} currentValue={props.currentValue as boolean}\n                                 toggle={() => props.toggleContextValue()}/>\n        )\n    }\n}\n\ntype NumericParamChangerProps =\n    { inline: boolean, name: string, currentValue: number, incValue: () => void, decValue: () => void };\n\nexport function NumericParamChanger({inline, name, currentValue, incValue, decValue}: NumericParamChangerProps) {\n    const incDecStyle = {verticalAlign: \"middle\"};\n    return (\n        <div className=\"ParamChanger\">\n            {inline ? <span>{name}</span> : <InputLabel>{name}</InputLabel>}\n            <IconButton className=\"IconAction material-icons\" style={incDecStyle} onClick={_ => incValue()}>arrow_circle_up</IconButton>\n            {currentValue}\n            <IconButton className=\"IconAction material-icons\" style={incDecStyle} onClick={_ => decValue()}>arrow_circle_down</IconButton>\n        </div>\n    )\n}\n\ntype BooleanParamChangerProps = { name: string, currentValue: boolean, toggle: () => void };\n\nexport function BooleanParamChanger({name, currentValue, toggle}: BooleanParamChangerProps) {\n    return (\n        <div className=\"ParamChanger\">\n            <InputLabel>{name}:</InputLabel>\n            <Switch\n                checked={currentValue}\n                onChange={_ => toggle()}\n                color=\"primary\"\n                name=\"name\"\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n            />\n        </div>\n    )\n}","import {Action} from \"redux\";\nimport {AHCharacter} from \"./tok/AHCharacter\";\nimport {IScenarioSpec} from \"./tok/Scenario\";\nimport {TokenSpec} from \"./tok/Token\";\n\nexport interface IAppAction extends Action {}\nexport interface ICampaignAction extends IAppAction {}\nexport interface IScenarioAction extends IAppAction { scenarioSpec: IScenarioSpec }\nexport interface ICharacterAction extends IAppAction { character: AHCharacter }\nexport interface IContextAction extends IAppAction { key: string }\nexport interface IIncDecAction extends IAppAction { incDec: boolean }\nexport interface ITokenAction extends IAppAction { tokenSpec: TokenSpec}\n\n// Campaign\nexport const NEXT_SCENARIO = 'NEXT_SCENARIO';\nexport const PREV_SCENARIO = 'PREV_SCENARIO';\n// Scenario\nexport const CHANGE_SCENARIO = 'CHANGE_SCENARIO';\n\n// Character\nexport const CHANGE_CHARACTER = 'CHANGE_CHARACTER';\n\n// Context\nexport const INC_DEC_CONTEXT_VALUE = 'INC_DEC_CONTEXT_VALUE';\nexport const TOGGLE_CONTEXT_VALUE = 'TOGGLE_CONTEXT_VALUE';\n\n// SkillTest\nexport const CHANGE_SKILL = 'CHANGE_SKILL';\nexport const CHANGE_TEST = 'CHANGE_TEST';\n\n//BagTokenSpec\nexport const ADD_TOKEN = 'ADD_TOKEN';\nexport const REMOVE_TOKEN = 'REMOVE_TOKEN';\n\nexport function advanceScenario(): ICampaignAction {\n    return {\n        type: NEXT_SCENARIO\n    }\n}\n\nexport function getBackScenario(): ICampaignAction {\n    return {\n        type: PREV_SCENARIO\n    }\n}\n\n// Scenario\nexport function changeScenario(scenarioSpec: IScenarioSpec): IScenarioAction {\n    return {\n        type: CHANGE_SCENARIO,\n        scenarioSpec\n    }\n}\n// Character\nexport function changeCharacter(character: AHCharacter): ICharacterAction {\n    return {\n        type: CHANGE_CHARACTER,\n        character\n    }\n}\n\n// Context\nexport function incDecContextValue(key: string, incDec: boolean): IContextAction & IIncDecAction {\n    return {\n        type: INC_DEC_CONTEXT_VALUE,\n        key, incDec\n    }\n}\n\nexport function toggleContextValue(key: string): IContextAction {\n    return {\n        type: TOGGLE_CONTEXT_VALUE,\n        key\n    }\n}\n\n// SkillTest\nexport function changeSkill(incDec: boolean): IIncDecAction {\n    return {\n        type: CHANGE_SKILL,\n        incDec\n    }\n}\nexport const decreaseSkill = () => changeSkill(false);\nexport const increaseSkill = () => changeSkill(true);\n\nexport function changeTest(incDec: boolean): IIncDecAction {\n    return {\n        type: CHANGE_TEST,\n        incDec\n    }\n}\nexport const decreaseTest = () => changeTest(false);\nexport const increaseTest = () => changeTest(true);\n\nexport function addToken(tokenSpec: TokenSpec): ITokenAction {\n    return {\n        type: ADD_TOKEN,\n        tokenSpec\n    }\n}\n\nexport function removeToken(tokenSpec: TokenSpec): ITokenAction {\n    return {\n        type: REMOVE_TOKEN,\n        tokenSpec\n    }\n}\n","import {Typography} from \"@material-ui/core\";\nimport {NumericParamChanger} from \"./ParamChanger\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport {AppState} from \"../AppState\";\nimport {Dispatch} from \"redux\";\nimport {decreaseSkill, decreaseTest, increaseSkill, increaseTest} from \"../AppActions\";\nimport {useTranslation} from \"react-i18next\";\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        skill: state.skillTest.skill,\n        test: state.skillTest.test\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        incSkill: () => dispatch(increaseSkill()),\n        decSkill: () => dispatch(decreaseSkill()),\n        incTest: () => dispatch(increaseTest()),\n        decTest: () => dispatch(decreaseTest())\n    }\n}\n\nexport const CurrentSkillTestChanger = connect(mapStateToProps, mapDispatchToProps)(SkillTestChanger);\n\nfunction SkillTestChanger(props: {skill: number, test: number,\n                                  incSkill: () => void, decSkill: () => void,\n                                  incTest: () => void, decTest: () => void}) {\n    const {skill, test, incSkill, decSkill, incTest, decTest} = props;\n    const { t } = useTranslation();\n    return (\n        <Typography variant=\"h5\">\n            <NumericParamChanger inline={true} name={t('Skill')} currentValue={skill} incValue={incSkill} decValue={decSkill}/>\n            <NumericParamChanger inline={true} name={t('Test')} currentValue={test} incValue={incTest} decValue={decTest}/>\n        </Typography>\n    );\n}","import React from \"react\";\nimport {passZoneLines, ISkillLine, TokenBagPassZone, TokenBag, tokenBagPassZone} from \"./Token\";\nimport \"./Tok.css\"\nimport {TokenSpan} from \"./TokenSpan\";\nimport {Grid, Typography} from \"@material-ui/core\";\nimport {CurrentSkillTestChanger} from \"./SkillTestChanger\";\nimport {SkillTest} from \"./SkillTest\";\nimport {connect} from \"react-redux\";\nimport {AppState} from \"../AppState\";\nimport {useTranslation} from \"react-i18next\";\n\nfunction mapStateToProps(state: AppState, ownProps: {tokenBag: TokenBag}) {\n    return {\n        passZone: tokenBagPassZone(ownProps.tokenBag),\n        skillTest: state.skillTest\n    }\n}\n\nexport const CurrentPassZone = connect(mapStateToProps)(PassZone);\n\nexport function PassZone({passZone, skillTest}: {passZone: TokenBagPassZone, skillTest: SkillTest}) {\n    const { t } = useTranslation();\n    const lines = passZoneLines(passZone, skillTest.skill, skillTest.test);\n    return (\n        <Grid container className=\"PassZone\" alignItems={\"center\"}>\n            <Grid item xs={12} sm={7} md={6} >\n            <Typography variant=\"h4\">{t('Pass zone')}</Typography>\n            <hr />\n            <Grid container direction=\"column\">\n                {\n                    lines.map(line => (\n                        <Grid key={line.key} item>\n                            <PassLine line={line} />\n                        </Grid>\n                    ))\n                }\n            </Grid>\n            <hr />\n            </Grid>\n            <Grid item xs={12} sm={5} md={6} style={{textAlign: \"center\"}}>\n                <CurrentSkillTestChanger />\n            </Grid>\n        </Grid>\n    )\n}\n\nfunction PassLine(props: {line: ISkillLine}) {\n    const line = props.line;\n    const liStyle = {\n        color: line.pass ? \"green\" : \"red\",\n    }\n    let lineSeparator;\n    if (line.firstFail) {\n        lineSeparator = <hr className=\"PassSeparator Current\"/>;\n    } else {\n        lineSeparator = <hr className=\"PassSeparator\" style={{borderColor: \"transparent\"}}/>;\n    }\n    return (\n        <div>{lineSeparator}\n        <Grid container  direction=\"row\"  alignItems=\"flex-start\" spacing={1}>\n            <Grid item style={{...liStyle, textAlign: \"center\"}} xs={2} sm={1}>\n                <Typography variant=\"h5\" >{line.key}</Typography>\n            </Grid>\n            <Grid item style={liStyle} className=\"LineProb\" xs={2} sm={2}>\n                <Typography variant=\"body1\">{line.prob.toFixed(2)}%</Typography>\n            </Grid>\n            <Grid item style={{textAlign: \"left\"}} xs={8} sm={9}>\n                <Typography variant=\"h3\" noWrap={true}>\n                {line.tokens.map((token, index) => (\n                    <TokenSpan key={index} token={token} />\n                ))}\n                </Typography>\n            </Grid>\n        </Grid>\n        </div>\n    )\n}\n","import {createStyles, FormControl, InputLabel, makeStyles, MenuItem, Select, Theme} from \"@material-ui/core\";\nimport {AppState} from \"../AppState\";\nimport {Dispatch} from \"redux\";\nimport {AHCharacter} from \"./AHCharacter\";\nimport {changeCharacter} from \"../AppActions\";\nimport {connect} from \"react-redux\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        formControl: {\n            margin: theme.spacing(1),\n            minWidth: 120,\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n    }),\n);\n\nconst mapStateToProps = (state: AppState) => ({character: state.selectedCharacter, characters: state.selectedCampaign.characters});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({setCharacter: (character: AHCharacter) => dispatch(changeCharacter(character))});\nexport const CurrentCharacterSelector = connect(\n    mapStateToProps,\n    mapDispatchToProps)(CharacterSelector);\n\nexport function CharacterSelector(props: {character: AHCharacter, characters: AHCharacter[], setCharacter: (character: AHCharacter) => void}) {\n    const {character, characters, setCharacter} = props;\n    const { t } = useTranslation();\n    const findCharacterByShortName = (shortName: string): AHCharacter | undefined => {\n        return characters.find(c => c.shortName === shortName);\n    }\n\n    return <div>\n        <InputLabel>{t('Current character')}:</InputLabel>\n        <FormControl variant=\"standard\" className={useStyles().formControl}>\n            <Select\n                labelId=\"character-selector-label\"\n                id=\"character-selector\"\n                value={character.shortName}\n                onChange={e => setCharacter(findCharacterByShortName(e.target.value as string)!)}>\n                {characters.map(aChar => (\n                    <MenuItem key={aChar.shortName} value={aChar.shortName}>{aChar.shortName}</MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    </div>;\n}","import {Campaign} from \"./tok/Campaign\";\nimport {IScenarioSpec} from \"./tok/Scenario\";\nimport {buildBagFromSpec, buildEffectSpecs, ScenarioContext, TokenBagSpec} from \"./tok/Token\";\nimport {SkillTest} from \"./tok/SkillTest\";\nimport {AHCharacter} from \"./tok/AHCharacter\";\n\nexport interface AppState {\n    selectedCampaign: Campaign;\n    bagSpec: TokenBagSpec;\n    selectedScenario: IScenarioSpec;\n    selectedCharacter: AHCharacter;\n    gameContext: ScenarioContext;\n    skillTest: SkillTest;\n}\n\nexport function buildBagFromState(appState: AppState) {\n    return buildBagFromSpec(\n        appState.bagSpec,\n        buildEffectSpecs(...appState.selectedScenario.scenarioEffectSpec),\n        appState.selectedCharacter,\n        appState.gameContext\n    );\n}\n","import {ScenarioContext, ScenarioEffectSpecs} from \"./Token\";\nimport {Translation} from \"../Utils\";\n\nexport interface IScenarioSpec {\n    name: string;\n    scenarioEffectSpec: ScenarioEffectSpecs;\n    contextSpec: IScenarioContextSpec;\n    translations: Translation;\n}\n\nexport function initContext(contextSpec: IScenarioContextSpec): ScenarioContext {\n    const context: ScenarioContext = {};\n    contextSpec.valuesSpec.forEach( vs => context[vs.name] = vs.initialValue)\n    return context;\n}\n\nexport interface IScenarioContextSpec {\n    valuesSpec: IContextValueSpec[];\n}\n\nexport function findValueSpec(contextSpec: IScenarioContextSpec, key: string) {\n    return contextSpec.valuesSpec.find(vs => vs.name === key);\n}\n\nexport type IContextValueType = \"number\" | \"boolean\";\n\nexport interface IContextValueSpec {\n    name: string;\n    description: string;\n    initialValue: number | boolean;\n    type: IContextValueType;\n    translations: Translation;\n}\n","import {connect} from \"react-redux\";\nimport {AppState} from \"../AppState\";\nimport React, {Dispatch} from \"react\";\nimport {\n    IContextAction,\n    IIncDecAction,\n    incDecContextValue,\n    toggleContextValue\n} from \"../AppActions\";\nimport {findValueSpec, IScenarioContextSpec} from \"./Scenario\";\nimport {Typography} from \"@material-ui/core\";\nimport {ContextValueChanger} from \"./ParamChanger\";\nimport {ScenarioContext} from \"./Token\";\n\nexport const CurrentScenarioContextManager = connect(\n    (state: AppState) => ({spec: state.selectedScenario.contextSpec, context: state.gameContext}),\n    (dispatch: Dispatch<IContextAction | IContextAction & IIncDecAction>) => ({\n        incDecContextValue: (key: string, incDec: boolean) => dispatch(incDecContextValue(key, incDec)),\n        toggleContextValue: (key: string) => dispatch(toggleContextValue(key))\n    })\n)(ContextManager);\nfunction ContextManager({spec, context, incDecContextValue, toggleContextValue}:\n                               {spec: IScenarioContextSpec, context: ScenarioContext,\n                                incDecContextValue: (key: string, incDec: boolean) => void,\n                                toggleContextValue: (key: string) => void}) {\n    return <Typography variant=\"h5\" style={{paddingTop: \"2vmin\"}}>\n        {Object.keys(context).map(contextKey => (\n            <ContextValueChanger key={contextKey} currentValue={context[contextKey]}\n                                 valueSpec={(findValueSpec(spec, contextKey)!)}\n                                 incDecContextValue={(incDec: boolean) => incDecContextValue(contextKey, incDec)}\n                                 toggleContextValue={() => toggleContextValue(contextKey)}/>\n        ))}\n    </Typography>\n\n}","import {allKnownTokens, allTokens, TokenBag, TokenBagSpec, tokenFloatAverage, TokenSpec} from \"./Token\";\nimport {Box, createStyles, Theme, Typography} from \"@material-ui/core\";\nimport {TokenSpan} from \"./TokenSpan\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {AppState} from \"../AppState\";\nimport {Dispatch} from \"redux\";\nimport {addToken, ITokenAction, removeToken} from \"../AppActions\";\nimport {connect} from \"react-redux\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\n\nexport function BagDisplay({tokenBag, showAverage = true, onClick, fadeOutTokens = false}:\n                               {tokenBag: TokenBag, showAverage?: boolean, onClick?: (token: TokenSpec) => void, fadeOutTokens: boolean}) {\n    const { t } = useTranslation();\n    return <div className=\"BagDisplay\">\n        {showAverage ? (<Typography>{t('Bag average')}: {tokenFloatAverage(tokenBag)}</Typography>) : null }\n        <p className=\"TokenStrip\">\n            {allTokens(tokenBag).map((token, index) => (\n                <TokenSpan key={token.id} token={token} onClick={onClick} fadeOut={fadeOutTokens}/>\n            ))}\n        </p>\n    </div>\n}\n\nexport const CurrentTokenBagManager = connect(\n    (state: AppState, ownProps: { tokenBag: TokenBag }) => {\n        return {\n            tokenBag: ownProps.tokenBag\n        }\n    },\n    (dispatch: Dispatch<ITokenAction>) => {\n        return {\n            addToken: (token: TokenSpec) => dispatch(addToken(token)),\n            removeToken: (token: TokenSpec) => dispatch(removeToken(token)),\n        }\n    }\n)(TokenBagManager);\nfunction TokenBagManager({tokenBag, addToken, removeToken}: {tokenBag: TokenBag,\n    addToken: (token: TokenSpec) => void, removeToken: (token: TokenSpec) => void}) {\n    const classes = useModalStyles();\n    const { t }  = useTranslation();\n    const allKnown = allKnownTokens();\n    return (\n        <Box textAlign=\"center\" className={classes.paper}>\n            <Typography id=\"bag-management-title\" variant=\"h3\">{t('Chaos bag')}</Typography>\n            <Typography>{t('Current bag')}. {t('Select tokens to remove them')}</Typography>\n            <BagDisplay tokenBag={tokenBag} showAverage={false}\n                        onClick={(token: TokenSpec) => removeToken(token)} fadeOutTokens={true}/>\n            <Typography >{t('Select tokens to add them to the bag')}</Typography>\n            <BagSpecDisplay tokenBagSpec={allKnown} onClick={(token: TokenSpec) => addToken(token)}/>\n        </Box>\n    );\n}\n\nfunction BagSpecDisplay({tokenBagSpec, onClick}: {tokenBagSpec: TokenBagSpec, onClick?: (token: TokenSpec) => void}) {\n    return <div className=\"BagDisplay\">\n        <p className=\"TokenStrip\">\n            {tokenBagSpec.tokens.map((token, index) => (\n                <TokenSpan key={index} token={token} onClick={onClick} fadeOut={false} fadeOutFadeIn={true}/>\n            ))}\n        </p>\n    </div>\n}\n\nconst useModalStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        paper: {\n            position: 'relative',\n            left: \"15%\",\n            top: \"40%\",\n            width: \"70%\",\n            opacity: 0.9,\n            backgroundColor: theme.palette.background.paper,\n            border: '2px solid #FFF',\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n        },\n    }),\n);\n\n\n\n","import React, {useState} from \"react\";\nimport {IScenarioSpec} from \"./Scenario\";\nimport {CurrentPassZone} from \"./PassZone\";\nimport {TokenBag} from \"./Token\";\nimport {Box, Button, Modal, Typography} from \"@material-ui/core\";\nimport {CurrentCharacterSelector} from \"./CharacterSelector\";\nimport {connect} from \"react-redux\";\nimport {AppState, buildBagFromState} from \"../AppState\";\nimport {CurrentScenarioContextManager} from \"./ContextManager\";\nimport {BagDisplay, CurrentTokenBagManager} from \"./TokenBag\";\nimport {useTranslation} from \"react-i18next\";\n\n\nconst mapStateToProps = (state: AppState) => ({tokenBag: buildBagFromState(state), scenario: state.selectedScenario});\n\nexport const CurrentScenarioPassZone = connect(mapStateToProps)(ScenarioPassZone);\n\nexport function ScenarioPassZone({tokenBag, scenario}: {tokenBag: TokenBag, scenario: IScenarioSpec}) {\n    const [open, setOpen] = useState<boolean>(false);\n    const { t } = useTranslation();\n    return (\n        <div className=\"Scenario\">\n            <div className=\"ScenarioInfo\">\n                <Typography variant=\"h3\">{t(scenario.name)}</Typography>\n                <CurrentScenarioContextManager />\n                <CurrentCharacterSelector />\n            </div>\n            <CurrentPassZone tokenBag={tokenBag}/>\n\n            <BagDisplay tokenBag={tokenBag} onClick={() => setOpen(true)} fadeOutTokens={false}/>\n            <Modal open={open} onClose={() => setOpen(false)} aria-labelledby=\"bag-management-title\">\n                <CurrentTokenBagManager tokenBag={tokenBag}/>\n            </Modal>\n            <Box textAlign={\"center\"}>\n                <Button color=\"secondary\" onClick={() => setOpen(true)}>{t('Manage chaos bag')}</Button>\n            </Box>\n        </div>\n    );\n}\n","import {EffectSpec} from \"./Token\";\n\nexport interface AHCharacter {\n    id: string,\n    name: string;\n    shortName: string;\n    elderSignEffect: EffectSpec;\n}\n\n\nexport const AHCharacters: {[key: string]: AHCharacter} = {\n    JoeDiamond: {id: \"JoeDiamond\", name: \"Joe Diamond\", shortName: \"Joe\", elderSignEffect: () => 1},\n    DianaStanley: {id: \"DianaStanley\", name: \"Diana Stanley\", shortName: \"Diana\", elderSignEffect: () => 2},\n}","import {\n    addTokens,\n    buildBagSpec,\n    FALLO_AUTOMATICO,\n    removeToken, seal,\n    tokenAverage, TokenBag,\n    TokenBagSpec,\n    tokenSpecDef\n} from \"./Token\";\nimport {AHLevel, Campaign, ICampaignSpec} from \"./Campaign\";\nimport {IScenarioSpec} from \"./Scenario\";\nimport {AHCharacter, AHCharacters} from \"./AHCharacter\";\n\n\nfunction easy(): TokenBagSpec {\n    return buildBagSpec(\n        tokenSpecDef(1, 1, false, \"elderSign\"),\n        tokenSpecDef(1, 2),\n        tokenSpecDef(0, 3),\n        tokenSpecDef(-1, 2),\n        tokenSpecDef(-2,1),\n        tokenSpecDef(-3, 1),\n        tokenSpecDef(0, 2, true, \"Calavera\"),\n        FALLO_AUTOMATICO\n    );\n}\nexport function normal(): TokenBagSpec {\n    return buildBagSpec(\n        tokenSpecDef(1, 1, false, \"elderSign\"),\n        tokenSpecDef(1, 1),\n        tokenSpecDef(0, 2),\n        tokenSpecDef(-1, 2),\n        tokenSpecDef(-2,2),\n        tokenSpecDef(-3, 1),\n        tokenSpecDef(-4, 1),\n        tokenSpecDef(0, 2, true, \"Calavera\"),\n        FALLO_AUTOMATICO\n        );\n}\nfunction hard (): TokenBagSpec {\n    return addTokens(\n            removeToken(normal(), \"1\"),\n            tokenSpecDef(-5, 1),\n    )\n}\n\nfunction expert (): TokenBagSpec {\n    return buildBagSpec(\n        tokenSpecDef(1, 1, false, \"elderSign\"),\n        tokenSpecDef(0, 1),\n        tokenSpecDef(-1, 2),\n        tokenSpecDef(-2,2),\n        tokenSpecDef(-3, 1),\n        tokenSpecDef(-4, 1),\n        tokenSpecDef(-6, 1),\n        tokenSpecDef(-8, 1),\n        tokenSpecDef(0, 2, true, \"Calavera\"),\n        FALLO_AUTOMATICO\n    );\n}\n\nfunction Prologo(): IScenarioSpec {\n    return {\n        name: \"Disappearance at the Twilight Estate\",\n        translations: {\n            \"es\": \"Desaparición en la finca del crepúsculo\",\n        },\n        scenarioEffectSpec: [\n            {name: \"elderSign\", effect: (tokenBag) => tokenBag.character.elderSignEffect(tokenBag)},\n            {name: \"Calavera\", effect: () => -3},\n        ],\n        contextSpec: {\n            valuesSpec: []\n        }\n    };\n}\n\nfunction LaHoraBruja(): IScenarioSpec {\n    return {\n        name: \"The Witching Hour\",\n        translations: {\n            \"es\": \"La hora bruja\"\n        },\n        scenarioEffectSpec: [\n            { name: \"elderSign\", effect: (tokenBag) => tokenBag.character.elderSignEffect(tokenBag) },\n            { name: \"Calavera\", effect: () => -1 },\n            { name: \"Lápida\", effect: () => -3 },\n            { name: \"Antiguo\", effect: () => -3 },\n        ],\n        contextSpec: {\n            valuesSpec: []\n        }\n    }\n}\n\nfunction ALasPuertasDeLaMuerte(): IScenarioSpec {\n    const HAUNTED_LOCATION = \"Haunted location\";\n    return {\n        name: \"At Death's Doorstep\",\n        translations: {\n            \"es\": \"A las puertas de la muerte\",\n        },\n        scenarioEffectSpec: [\n            { name: \"elderSign\", effect: (tokenBag) => tokenBag.character.elderSignEffect(tokenBag) },\n            { name: \"Calavera\", effect: (tokenBag) => tokenBag.context[HAUNTED_LOCATION] ? -3 : -1 },\n            { name: \"Lápida\", effect: () => -2 },\n            { name: \"Antiguo\", effect: () => -2 },\n        ],\n        contextSpec: {\n            valuesSpec: [{\n                name: HAUNTED_LOCATION,\n                description: \"Haunted location\",\n                type: \"boolean\",\n                initialValue: false,\n                translations: {\n                    \"es\": \"Lugar embrujado\"\n                }\n            }]\n        }\n    }\n}\n\nfunction ElNombreSecreto(): IScenarioSpec {\n    const EXTRADIMENSIONAL_LOCATION = \"Extradimensional location\";\n    return {\n        name: \"The Secret Name\",\n        translations: {\n            \"es\": \"El nombre secreto\",\n        },\n        scenarioEffectSpec: [\n            { name: \"elderSign\", effect: (tokenBag) => tokenBag.character.elderSignEffect(tokenBag) },\n            { name: \"Calavera\", effect: (tokenBag) => tokenBag.context[EXTRADIMENSIONAL_LOCATION] ? -3 : -1 },\n            { name: \"Sectario\", effect: tokenBag => tokenAverage(seal(tokenBag, \"Sectario\"))},\n            { name: \"Lápida\", effect: () => -2 },\n            { name: \"Antiguo\", effect: () => -3 },\n        ],\n        contextSpec: {\n            valuesSpec: [{\n                name: EXTRADIMENSIONAL_LOCATION,\n                description: \"Extradimensional location\",\n                type: \"boolean\",\n                initialValue: false,\n                translations: {\n                    \"es\": \"Lugar Extradimensional\"\n                }\n            }]\n        }\n    }\n}\n\nfunction LaPagaDelPecado(): IScenarioSpec {\n    const UNFINISHED_BUSINESS = \"Unfinished business\";\n    const FIGHTING_EVADING_HERETIC = \"Fighting/evading Heretic\";\n    return {\n        name: \"The Wages of Sin\",\n        translations: {\n            \"es\": \"La paga del pecado\",\n        },\n        scenarioEffectSpec: [\n            {name: \"elderSign\", effect: (tokenBag) => tokenBag.character.elderSignEffect(tokenBag)},\n            {name: \"Calavera\", effect: (tokenBag) => 0 - (tokenBag.context[UNFINISHED_BUSINESS] as number)},\n            {name: \"Sectario\", effect: (tokenBag) => tokenBag.context[FIGHTING_EVADING_HERETIC] ? -4 : -3 },\n            {name: \"Lápida\", effect: () => -3},\n            {name: \"Antiguo\", effect: () => -2},\n        ],\n        contextSpec: {\n            valuesSpec: [\n                {\n                    name: UNFINISHED_BUSINESS,\n                    description: \"Unfinished business\",\n                    type: \"number\",\n                    initialValue: 0,\n                    translations: {\n                        \"es\": \"Asuntos inconclusos\",\n                    }\n                },\n                {\n                    name: FIGHTING_EVADING_HERETIC,\n                    description: \"Fighting/evading Heretic\",\n                    type: \"boolean\",\n                    initialValue: false,\n                    translations: {\n                        \"es\": \"Atacando/Evitando Hereje\"\n                    }\n                }\n            ]\n        }\n    };\n}\n\nfunction PorElBienComun(): IScenarioSpec {\n    const MAXIMA_PERDICION = \"Max Doom\";\n    return {\n        name: \"For the Greater Good\",\n        translations: {\n            \"es\": \"Por el bien común\",\n        },\n        scenarioEffectSpec: [\n            {name: \"elderSign\", effect: (tokenBag) => tokenBag.character.elderSignEffect(tokenBag)},\n            {name: \"Calavera\", effect: (tokenBag) => 0 - (tokenBag.context[MAXIMA_PERDICION] as number)},\n            {name: \"Sectario\", effect: tokenBag => tokenAverage(seal(tokenBag, \"Sectario\")) - 2},\n            {name: \"Lápida\", effect: () => -3},\n            {name: \"Antiguo\", effect: () => -3},\n        ],\n        contextSpec: {\n            valuesSpec: [{\n                name: MAXIMA_PERDICION,\n                description: \"Highest number of doom on a Cultist\",\n                type: \"number\",\n                initialValue: 0,\n                translations: {\n                    \"es\": \"Máxima perdición\"\n                }\n            }]\n        }\n    };\n}\n\nfunction UnionYDesilusion(): IScenarioSpec {\n    const ACCION_CIRCULO = \"Circle action\";\n    return {\n        name: \"Union and Disillusion\",\n        translations: {\n            \"es\": \"Unión y desilusión\"\n        },\n        scenarioEffectSpec: [\n            {name: \"elderSign\", effect: (tokenBag) => tokenBag.character.elderSignEffect(tokenBag)},\n            {name: \"Calavera\", effect: (tokenBag) =>\n                    tokenBag.context[ACCION_CIRCULO] ? tokenAverage(seal(tokenBag, \"Calavera\")) - 2 : -2},\n            {name: \"Sectario\", effect: () => -3},\n            {name: \"Lápida\", effect: () => -3},\n            {name: \"Antiguo\", effect: () => -3},\n        ],\n        contextSpec: {\n            valuesSpec: [{\n                name: ACCION_CIRCULO,\n                description: \"This skill test is a circle action\",\n                type: \"boolean\",\n                initialValue: false,\n                translations: {\n                    \"es\": \"Acción círculo\"\n                }\n            }]\n        }\n    };\n}\n\nfunction EnLasGarrasDelCaos(): IScenarioSpec {\n    const PERDICION_Y_BRECHA = \"Doom and breaches on your location\";\n    const getPerdicionYBrecha = (tokenBag: TokenBag) => {\n        return tokenBag.context[PERDICION_Y_BRECHA] as number;\n    }\n\n    return {\n        name: \"In the Clutches of Chaos\",\n        translations: {\n          \"es\": \"En las garras del caos\",\n        },\n        scenarioEffectSpec: [\n            {name: \"elderSign\", effect: (tokenBag) => tokenBag.character.elderSignEffect(tokenBag)},\n            {name: \"Calavera\", effect: (tokenBag) => 0 - getPerdicionYBrecha(tokenBag)},\n            {name: \"Sectario\", effect: (tokenBag) => {\n                //Creates a new bag and a new context for this calculation\n                    const potentialBag = seal(tokenBag, \"Sectario\");\n                    potentialBag.context = {\n                        [PERDICION_Y_BRECHA]: Math.max(3, getPerdicionYBrecha(tokenBag) + 1),\n                    }\n                    return tokenAverage(potentialBag);\n                }},\n            {name: \"Lápida\", effect: () => -2},\n            {name: \"Antiguo\", effect: () => -3},\n        ],\n        contextSpec: {\n            valuesSpec: [{\n                name: PERDICION_Y_BRECHA,\n                description: \"Total amount of doom and breaches on your location\",\n                type: \"number\",\n                initialValue: 0,\n                translations: {\n                    \"es\": \"Perdición y brecha en tu lugar\"\n                }\n            }]\n        }\n    };\n}\n\nfunction AnteElTronoNegro(): IScenarioSpec {\n    const PERDICION_EN_AZATHOTH = \"Doom on Azathoth\";\n    const getHalfDoomInAzathot = (tokenBag: TokenBag) => {\n        return Math.ceil((tokenBag.context[PERDICION_EN_AZATHOTH] as number) / 2);\n    }\n\n    return {\n        name: \"Before the Black Throne\",\n        translations: {\n            \"es\": \"Ante el trono negro\"\n        },\n        scenarioEffectSpec: [\n            {name: \"elderSign\", effect: (tokenBag) => tokenBag.character.elderSignEffect(tokenBag)},\n            {name: \"Calavera\", effect: (tokenBag) => 0 - Math.max(2, getHalfDoomInAzathot(tokenBag))},\n            {name: \"Sectario\", effect: (tokenBag) => tokenAverage(seal(tokenBag, \"Sectario\"))},\n            {name: \"Lápida\", effect: () => -2},\n            {name: \"Antiguo\", effect: () => -4},\n        ],\n        contextSpec: {\n            valuesSpec: [{\n                name: PERDICION_EN_AZATHOTH,\n                description: PERDICION_EN_AZATHOTH,\n                type: \"number\",\n                initialValue: 0,\n                translations: {\n                    \"es\": \"Perdición en Azathoth\"\n                }\n            }]\n        }\n    };\n}\n\nexport function buildElCirculoRotoCampaignSpec(): ICampaignSpec {\n    return {\n        id: \"TheCircleUndone\",\n        name: \"The Circle Undone\",\n        scenarios: [\n            Prologo(),\n            LaHoraBruja(), ALasPuertasDeLaMuerte(), ElNombreSecreto(), LaPagaDelPecado(),\n            PorElBienComun(), UnionYDesilusion(), EnLasGarrasDelCaos(), AnteElTronoNegro()\n        ],\n        bagSpecsByLevel: {\n            easy: easy(),\n            normal: normal(),\n            hard: hard(),\n            expert: expert(),\n        },\n        translations: {\n            \"es\": \"El círculo roto\"\n        }\n    }\n}\n\nexport function startElCirculoRoto(characters: AHCharacter[], level: AHLevel) {\n    return Campaign.start(buildElCirculoRotoCampaignSpec(), characters, level);\n}\n\nexport function startAlvaroElCirculoRotoLPDP() {\n    const campaign = startElCirculoRoto([\n        AHCharacters[\"JoeDiamond\"], AHCharacters[\"DianaStanley\"],\n        // {name: \"Joe Diamond\", shortName: \"Joe\", elderSignEffect: () => 1},\n        // {name: \"Diana Stanley\", shortName: \"Diana\", elderSignEffect: () => 2},\n    ], \"normal\");\n    campaign.addTokensToBagSpec(\n        tokenSpecDef(0, 2, true, \"Lápida\"), // <- La hora bruja: Los inv han aceptado su destino\n        tokenSpecDef(0, 1, true, \"Sectario\"), // <- El precio del progreso, unirme a la logia\n        tokenSpecDef(0, 1, true, \"Calavera\"), // <- El nombre secreto, coger el Libro Negro\n        // tokenSpecDef(0, 1, true, \"Antiguo\"),\n        // tokenSpecDef(-5, 1, false),\n    );\n    campaign.startCampaign(0);\n    return campaign;\n}","import {IScenarioSpec} from \"./Scenario\";\nimport {addTokens, TokenBagSpec, TokenSpec} from \"./Token\";\nimport {AHCharacter} from \"./AHCharacter\";\nimport {buildElCirculoRotoCampaignSpec} from \"./ElCirculoRoto\";\nimport {Translation} from \"../Utils\";\n\nexport type AHLevel = \"easy\" | \"normal\" | \"hard\" | \"expert\";\ntype IBagSpecByLevel = {\n    [key in AHLevel]: TokenBagSpec;\n};\n\nexport interface ICampaignSpec {\n    id: string;\n    name: string;\n    scenarios: IScenarioSpec[];\n    bagSpecsByLevel: IBagSpecByLevel;\n    translations: Translation;\n}\n\ninterface ICampaigns {\n    [key: string]: ICampaignSpec\n}\nexport const Campaigns: ICampaigns = {\n    TheCircleUndone: buildElCirculoRotoCampaignSpec() as ICampaignSpec\n}\n\nexport const campaignTranslations = Object.values(Campaigns).reduce<any>((allTrans, campaign) => {\n    const thisTranslations = campaign.translations;\n    Object.keys(thisTranslations).forEach(lang => {\n        if (allTrans[lang] === undefined) {\n            allTrans[lang] = {}\n        }\n        allTrans[lang][campaign.name] = thisTranslations[lang];\n    });\n    campaign.scenarios.forEach(scenario =>  {\n        Object.keys(scenario.translations).forEach(scenarioLang => {\n            if (allTrans[scenarioLang] === undefined) {\n                allTrans[scenarioLang] = {}\n            }\n            allTrans[scenarioLang][scenario.name] = scenario.translations[scenarioLang]\n        });\n        scenario.contextSpec.valuesSpec.forEach(valueSpec => {\n            Object.keys(valueSpec.translations).forEach(valueSpecLang => {\n                if (allTrans[valueSpecLang] === undefined) {\n                    allTrans[valueSpecLang] = {}\n                }\n                allTrans[valueSpecLang][valueSpec.name] = valueSpec.translations[valueSpecLang];\n            });\n\n        })\n    });\n    return allTrans;\n}, {});\n\ninterface ICampaign {\n}\n\nexport class Campaign implements ICampaign {\n    public currentScenario = 0;\n\n    constructor(public name: string,\n                public campaignSpec: ICampaignSpec,\n                public characters: AHCharacter[],\n                public currentBagSpec: TokenBagSpec,\n                currentScenario = 0) {\n        this.startCampaign(currentScenario);\n    }\n\n    public static start(campaignSpec: ICampaignSpec, characters: AHCharacter[], level: AHLevel): Campaign {\n        return new Campaign(campaignSpec.name, campaignSpec, characters, campaignSpec.bagSpecsByLevel[level]);\n    }\n\n\n    startCampaign(scenarioNum = 0) {\n        this.currentScenario = scenarioNum;\n        let scenarioIndex = 0;\n        while (scenarioIndex <= scenarioNum) {\n            this.currentScenario = scenarioIndex;\n            scenarioIndex++;\n        }\n    }\n\n    getScenarioSpec() {\n        return this.campaignSpec.scenarios[this.currentScenario];\n    }\n\n    addTokensToBagSpec(...tokens: TokenSpec[]) {\n        this.currentBagSpec = addTokens(this.currentBagSpec, ...tokens);\n    }\n\n    nextScenario() {\n        if ((this.currentScenario + 1 ) < this.campaignSpec.scenarios.length) {\n            this.currentScenario++;\n            // console.log(\"Current scenario index\", this.currentScenario, \"name\", this.campaignSpec.scenarios[this.currentScenario].name);\n            if (this.currentScenario >= this.campaignSpec.scenarios.length) {\n                // TODO: Modify current bag spec depending on resolution or preparation of new scenario\n                // advanceScenario\n            }\n        }\n        return this.getScenarioSpec();\n    }\n\n    // Returns to the previous scenario with the bag as it was\n    prevScenario() {\n        if (this.currentScenario  > 0) {\n            this.currentScenario--;\n        }\n        return this.getScenarioSpec();\n    }\n}\n","import {CombinedState, combineReducers, Reducer} from \"redux\";\nimport {Campaign} from \"./tok/Campaign\";\nimport {initContext, IScenarioSpec} from \"./tok/Scenario\";\nimport {\n    addTokens,\n    incDecContextNatural,\n    removeToken,\n    ScenarioContext,\n    TokenBagSpec\n} from \"./tok/Token\";\nimport {startAlvaroElCirculoRotoLPDP} from \"./tok/ElCirculoRoto\";\nimport {\n    ADD_TOKEN,\n    CHANGE_CHARACTER,\n    CHANGE_SCENARIO,\n    CHANGE_SKILL,\n    CHANGE_TEST,\n    IAppAction,\n    ICharacterAction,\n    IContextAction,\n    IIncDecAction,\n    INC_DEC_CONTEXT_VALUE,\n    IScenarioAction, ITokenAction,\n    NEXT_SCENARIO,\n    PREV_SCENARIO, REMOVE_TOKEN,\n    TOGGLE_CONTEXT_VALUE\n} from \"./AppActions\";\nimport {AppState} from \"./AppState\";\nimport {SkillTest} from \"./tok/SkillTest\";\nimport {AHCharacter} from \"./tok/AHCharacter\";\nimport {incDecNatural} from \"./Utils\";\n\n\nconst defaultCampaign = startAlvaroElCirculoRotoLPDP();\n\nconst  selectedCampaign: Reducer<Campaign, IAppAction> = (state: Campaign = defaultCampaign, action: IAppAction) => {\n    switch (action.type) {\n        case NEXT_SCENARIO:\n            state.nextScenario();\n            return state;\n        case PREV_SCENARIO:\n            state.prevScenario();\n            return state;\n        default:\n            return state;\n    }\n}\n\n\nconst firstScenario = defaultCampaign.getScenarioSpec();\nconst selectedScenario: Reducer<IScenarioSpec, IAppAction> = (state = firstScenario, action: IAppAction) => {\n    switch (action.type) {\n        case CHANGE_SCENARIO:\n            return (action as IScenarioAction).scenarioSpec;\n        default:\n            return state;\n    }\n}\n\nconst selectedCharacter: Reducer<AHCharacter, IAppAction> = (state = defaultCampaign.characters[0], action: IAppAction) => {\n    switch (action.type) {\n        case CHANGE_CHARACTER:\n            return (action as ICharacterAction).character;\n        default:\n            return state;\n    }\n}\nconst initialContext = initContext(firstScenario.contextSpec);\nconst gameContext: Reducer<ScenarioContext, IAppAction> = (gameContext = initialContext, action: IAppAction) => {\n    switch (action.type) {\n        case CHANGE_SCENARIO:\n            return initContext((action as IScenarioAction).scenarioSpec.contextSpec);\n        case INC_DEC_CONTEXT_VALUE:\n            const contextAction = action as IContextAction & IIncDecAction;\n            const key = contextAction.key;\n            return Object.assign({}, gameContext, {\n                [key]: incDecContextNatural(gameContext, key, contextAction.incDec)\n            });\n        case TOGGLE_CONTEXT_VALUE:\n            const contextToggleAction = action as IContextAction;\n            return Object.assign({}, gameContext, {\n                [contextToggleAction.key]: !(gameContext[contextToggleAction.key] as boolean)\n            });\n        default:\n            return gameContext;\n    }\n}\n\nconst initialSkillTest = {skill: 4, test: 2} as SkillTest;\nconst skillTest: Reducer<SkillTest, IAppAction> = (state = initialSkillTest, action) => {\n    const skillTestAction = action as IIncDecAction;\n    switch (action.type) {\n        case CHANGE_SKILL:\n            return Object.assign({}, state, {\n                skill: incDecNatural(state.skill, skillTestAction.incDec)\n            });\n        case CHANGE_TEST:\n            return Object.assign({}, state, {\n                test: incDecNatural(state.test, skillTestAction.incDec)\n            });\n        default:\n            return state;\n\n    }\n}\n\nconst bagSpec: Reducer<TokenBagSpec, IAppAction> = (state = defaultCampaign.currentBagSpec, action) => {\n    const tokenAction = action as ITokenAction;\n    switch (action.type) {\n        case ADD_TOKEN:\n            return addTokens(state, tokenAction.tokenSpec);\n        case REMOVE_TOKEN:\n            return removeToken(state, tokenAction.tokenSpec.name);\n        default:\n            return state;\n    }\n}\n\nexport const appReducers: Reducer<CombinedState<AppState>, IAppAction>  = combineReducers<AppState, IAppAction>({\n    selectedCampaign,  bagSpec, selectedCharacter, selectedScenario, gameContext, skillTest\n});\n","import {createStore, Store} from \"redux\";\nimport {appReducers} from \"./AppReducers\";\nimport {IAppAction} from \"./AppActions\";\nimport {AppState} from \"./AppState\";\nimport {Campaign, Campaigns, ICampaignSpec} from \"./tok/Campaign\";\nimport {SkillTest} from \"./tok/SkillTest\";\nimport {startAlvaroElCirculoRotoLPDP} from \"./tok/ElCirculoRoto\";\nimport {ScenarioContext, TokenBagSpec} from \"./tok/Token\";\nimport {AHCharacters} from \"./tok/AHCharacter\";\nimport {initContext} from \"./tok/Scenario\";\n\n\ninterface IStorageStage {\n    name: string;\n    campaignSpecId: string;\n    bagSpec: TokenBagSpec;\n    characters: string[];\n    currentScenario: number;\n    currentCharacter: string;\n    currentContext: ScenarioContext;\n}\nfunction loadStorageStage(): IStorageStage | undefined {\n    const storageStateString = localStorage.getItem(\"ahtok.kortsoft.net/state\");\n    return storageStateString ? JSON.parse(storageStateString) : undefined;\n}\n\n\nconst LANGUAGE_STORE_KEY = \"ahtok.kortsoft.net/lang\";\n\nexport function loadCurrentLang() {\n    const appLang = localStorage.getItem(LANGUAGE_STORE_KEY);\n    if (appLang === null) {\n        let userLang: string = navigator.language;\n        const dashPosition = userLang.indexOf(\"-\");\n        if (dashPosition > -1) {\n            userLang = userLang.substring(0, dashPosition);\n        }\n        return userLang;\n    }\n    return appLang;\n}\n\nfunction initialState():AppState {\n    function defaultCampaign() {\n        return startAlvaroElCirculoRotoLPDP();\n    }\n    const preloadCampaign = loadStorageStage();\n    if (preloadCampaign) {\n        const campaignSpec: ICampaignSpec = Campaigns[preloadCampaign.campaignSpecId];\n        const characters = preloadCampaign.characters.map(cId => AHCharacters[cId]);\n        const campaign = new Campaign(\n            preloadCampaign.name, campaignSpec, characters,\n            preloadCampaign.bagSpec, preloadCampaign.currentScenario);\n        const character = AHCharacters[preloadCampaign.currentCharacter];\n        return {\n            selectedCampaign: campaign,\n            selectedScenario: campaign.getScenarioSpec(),\n            selectedCharacter: character,\n            skillTest: {skill: 4, test: 2} as SkillTest,\n            gameContext: preloadCampaign.currentContext,\n            bagSpec: preloadCampaign.bagSpec\n        }\n    } else {\n        const campaign = defaultCampaign();\n        const currentScenarioSpec = campaign.getScenarioSpec();\n        return {\n            selectedCampaign: campaign,\n            selectedScenario: currentScenarioSpec,\n            selectedCharacter: campaign.characters[0],\n            skillTest: {skill: 4, test: 2} as SkillTest,\n            gameContext: initContext(currentScenarioSpec.contextSpec),\n            bagSpec: campaign.currentBagSpec,\n        };\n    }\n\n}\n\nconst appState = initialState();\nexport let store: Store<AppState, IAppAction> =\n    createStore<AppState, IAppAction, {}, {}>(appReducers, appState);\n\nexport function resetStore() {\n    store = createStore<AppState, IAppAction, {}, {}>(appReducers);\n}\n\nexport function saveLang(lang: string) {\n    localStorage.setItem(LANGUAGE_STORE_KEY, lang);\n    window.location.reload();\n}\n\nstore.subscribe(() => {\n    const campaign = store.getState().selectedCampaign;\n    const newStorageCampaign: IStorageStage = {\n        name: campaign.name,\n        campaignSpecId: campaign.campaignSpec.id,\n        bagSpec: store.getState().bagSpec,\n        characters: campaign.characters.map(c => c.id),\n        currentScenario: campaign.currentScenario,\n        currentCharacter: store.getState().selectedCharacter.id,\n        currentContext: store.getState().gameContext\n    };\n    localStorage.setItem(\"ahtok.kortsoft.net/state\", JSON.stringify(newStorageCampaign));\n});","import React from 'react';\nimport './App.css';\nimport {CurrentScenarioPassZone} from \"./tok/ScenarioPassZone\";\nimport {Box, Button, Container, CssBaseline, Typography} from \"@material-ui/core\";\nimport {ThemeProvider} from \"@material-ui/core/styles\";\nimport {tokTheme} from \"./TokTheme\";\nimport {connect} from \"react-redux\";\nimport {changeScenario as changeScenarioAction} from \"./AppActions\";\nimport {IScenarioSpec} from \"./tok/Scenario\";\nimport {nonAscii} from \"./Utils\";\nimport {useTranslation} from \"react-i18next\";\nimport I18n from \"./I18n\";\nimport {AppState} from \"./AppState\";\nimport {Campaign} from \"./tok/Campaign\";\nimport {loadCurrentLang, saveLang} from \"./AppStore\";\nconst Flags = require('country-flag-icons/react/3x2');\n\nconst App = connect(\n    (store: AppState) => ({\n        campaign: store.selectedCampaign\n}),\n    (dispatch => ({\n        changeScenario: (scenario:IScenarioSpec) => dispatch(changeScenarioAction(scenario)),\n    }))\n)(AppComponent);\n\nfunction AppComponent(props: {campaign: Campaign,\n                        changeScenario: (scenario: IScenarioSpec) => void}) {\n    const myLang = loadCurrentLang();\n    I18n(myLang);\n    const { t } = useTranslation();\n    const themeSpec = tokTheme();\n    const campaign = props.campaign;\n    const campaignName = t(campaign.name);\n    return (\n    <ThemeProvider theme={themeSpec.theme}>\n\n        <CssBaseline>\n            <div className=\"App\">\n                <Typography style={{fontFamily: nonAscii(campaignName) ? themeSpec.headerFontFamilyNonAscii : themeSpec.headerFontFamily, textAlign: \"center\"}}\n                            variant=\"h2\" color=\"secondary\" variantMapping={{h1: \"header\"}} className=\"App-header\">\n                    <Box style={{float: \"right\"}}>\n                        <Flags.GB className={\"IconAction\"} onClick={() => saveLang('en')} style={{width: \"0.5em\", opacity: myLang === \"en\" ? \"1.0\" : \"0.4\"}}/>\n                        <Flags.ES className={\"IconAction\"} onClick={() => saveLang('es')} style={{width: \"0.5em\", opacity: myLang === \"es\" ? \"1.0\" : \"0.4\"}}/>\n                    </Box>\n                    {campaignName}\n                </Typography>\n                <Container className=\"MainContainer\" maxWidth=\"lg\">\n                    <Box textAlign={\"center\"}>\n                        <Button color=\"secondary\" onClick={() => props.changeScenario(campaign.prevScenario())}>{t('prev')}</Button>\n                        <Button color=\"secondary\" onClick={() => props.changeScenario(campaign.nextScenario())}>{t('next')}</Button>\n                    </Box>\n                    <CurrentScenarioPassZone />\n                </Container>\n            </div>\n        </CssBaseline>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import i18 from \"i18next\";\nimport {initReactI18next} from \"react-i18next\";\nimport {campaignTranslations} from \"./tok/Campaign\";\n\nexport default function (lang = \"es\") {\n    i18.use(initReactI18next)\n        .init({\n            resources: {\n                es: {\n                    translation: {\n                        ...campaignTranslations[\"es\"],\n                        \"prev\": \"prev.\",\n                        \"next\": \"sig.\",\n                        \"Pass zone\": \"Zona de éxito\",\n                        \"Skill\": \"Habilidad\",\n                        \"Test\": \"Dificultad\",\n                        \"Bag average\": \"Valor medio\",\n                        \"Current character\": \"Personaje actual\",\n                        \"Manage chaos bag\": \"Gestionar bolsa del caos\",\n                        \"Chaos bag\": \"Bolsa del caos\",\n                        \"Current bag\": \"Bolsa actual\",\n                        \"Select tokens to remove them\": \"Selecciona tokens para eliminarlos\",\n                        \"Select tokens to add them to the bag\": \"Selecciona tokens para añadirlos a la bolsa\",\n                    }\n                },\n            },\n            lng: lang,\n            fallbackLng: \"en\"\n        })\n}","import {createMuiTheme, responsiveFontSizes} from \"@material-ui/core\";\n\nexport function tokTheme() {\n    const baseFontFamily = [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n    ];\n    const birminghamFontFamily = \"Birmingham\";\n    const uglyQuaFontFamily = 'UglyQua';\n    const theme = responsiveFontSizes(createMuiTheme({\n        typography: {\n            fontFamily: [uglyQuaFontFamily].concat(baseFontFamily).join(','),\n            fontSize: 14\n        },\n        palette: {\n            tonalOffset: 1,\n            type: \"dark\",\n            primary: {\n                main: \"#205b57\",\n            },\n            secondary: {\n                main: \"#f4ebcc\",\n            }\n        }\n    }));\n\n    const headerFontFamily = [birminghamFontFamily].concat(baseFontFamily).join(',');\n    const headerFontFamilyNonAscii = [uglyQuaFontFamily].concat(baseFontFamily).join(',');\n    return {\n        theme,\n        headerFontFamily,\n        headerFontFamilyNonAscii\n    };\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {store} from \"./AppStore\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}