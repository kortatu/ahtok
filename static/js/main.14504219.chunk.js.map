{"version":3,"sources":["Utils.ts","tok/Token.ts","tok/TokenSpan.tsx","tok/ParamChanger.tsx","AppActions.ts","tok/SkillTestChanger.tsx","tok/PassZone.tsx","tok/CharacterSelector.tsx","AppState.ts","tok/Scenario.ts","tok/ContextManager.tsx","tok/ScenarioPassZone.tsx","tok/Campaign.ts","tok/AHCharacter.ts","tok/ElCirculoRoto.ts","AppReducers.ts","AppStore.ts","App.tsx","TokTheme.ts","serviceWorker.ts","index.tsx"],"names":["incDecNatural","previous","incDec","Math","max","tokenSpecDef","value","count","chaos","name","copyTokenSpec","tokenSpec","findName","tokenBagSpec","tokens","find","t","addTokens","newBag","map","ts","forEach","tokenSpecInBag","push","buildBagSpec","incDecContextNatural","state","key","buildEffectSpecs","effectMap","Map","effectSpecs","ns","set","effect","buildBagFromSpec","bagSpec","effects","character","context","tokenDef","get","FALLO_AUTOMATICO","sortTokens","tokenBag","sort","a","b","tokenFloatAverage","numOfTokens","reduce","sum","token","tokenAverage","floatAverage","floor","accumulated","previousValues","last","length","undefined","histogram","prev","curr","prevValue","concat","seal","tokenName","tokensFiltered","decCount","filter","tokenBagPassZone","accum","total","vc","prob","sorted","i","j","tokensWithValue","passZoneLines","tokenBagMap","skill","test","lines","stillPass","result","pass","nextPass","currentProb","firstFail","TokenSpan","props","className","ContextValueChanger","valueSpec","type","NumericParamChanger","inline","description","currentValue","incValue","incDecContextValue","decValue","BooleanParamChanger","toggle","toggleContextValue","incDecStyle","verticalAlign","InputLabel","IconButton","style","onClick","_","Switch","checked","onChange","color","inputProps","changeSkill","changeTest","CurrentSkillTestChanger","connect","skillTest","dispatch","incSkill","decSkill","incTest","decTest","Typography","variant","CurrentPassZone","ownProps","passZone","Grid","container","alignItems","item","xs","sm","md","direction","line","PassLine","textAlign","lineSeparator","liStyle","borderColor","spacing","toFixed","noWrap","index","useStyles","makeStyles","theme","createStyles","formControl","margin","minWidth","selectEmpty","marginTop","CurrentCharacterSelector","selectedCharacter","characters","selectedCampaign","setCharacter","changeCharacter","FormControl","Select","labelId","id","shortName","e","target","c","aChar","MenuItem","buildBagFromState","appState","currentBagSpec","selectedScenario","scenarioEffectSpec","gameContext","initContext","contextSpec","valuesSpec","vs","initialValue","CurrentScenarioContextManager","spec","paddingTop","Object","keys","contextKey","CurrentScenarioPassZone","scenario","BagDisplay","bag","allTokensIndividually","allTokens","Campaigns","TheCircleUndone","buildElCirculoRotoCampaignSpec","Campaign","campaignSpec","currentScenario","this","startCampaign","scenarioNum","scenarioIndex","scenarios","getScenarioSpec","level","bagSpecsByLevel","AHCharacters","JoeDiamond","elderSignEffect","DianaStanley","normal","hard","removeToken","EnLasGarrasDelCaos","PERDICION_Y_BRECHA","getPerdicionYBrecha","potentialBag","AnteElTronoNegro","ceil","getHalfDoomInAzathot","easy","expert","startAlvaroElCirculoRotoLPDP","campaign","start","addTokensToBagSpec","defaultCampaign","firstScenario","initialContext","initialSkillTest","appReducers","combineReducers","action","nextScenario","prevScenario","scenarioSpec","contextAction","assign","contextToggleAction","skillTestAction","preloadCampaign","storageStateString","localStorage","getItem","JSON","parse","loadStorageStage","campaignSpecId","cId","currentCharacter","currentContext","currentScenarioSpec","initialState","console","log","store","createStore","subscribe","getState","newStorageCampaign","setItem","stringify","App","changeScenario","themeSpec","baseFontFamily","uglyQuaFontFamily","responsiveFontSizes","createMuiTheme","typography","fontFamily","join","fontSize","palette","tonalOffset","primary","main","secondary","headerFontFamily","tokTheme","ThemeProvider","CssBaseline","variantMapping","h1","Container","maxWidth","Box","Button","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"2QAAO,SAASA,EAAcC,EAAkBC,GAC5C,OAAOA,EAASD,EAAW,EAAIE,KAAKC,IAAI,EAAGH,EAAW,GCcnD,SAASI,EAAaC,EAAeC,GAAyD,IAA1CC,EAAyC,wDAA1BC,EAA0B,uCAChG,MAAO,CACHH,QAAOC,QAAOC,QACdC,KAAI,OAAEA,QAAF,IAAEA,IAAQ,QAAUH,GAIhC,SAASI,EAAcC,GACnB,OAAO,eACAA,GAYX,SAASC,EAASC,EAA4BJ,GAC1C,OAAOI,EAAaC,OAAOC,MAAK,SAAAC,GAAC,OAAIA,EAAEP,OAASA,KAe7C,SAASQ,EAAUJ,GAAkE,IACxF,IAAMK,EAAS,CACXJ,OAAQD,EAAaC,OAAOK,KAAI,SAAAC,GAAE,OAAIV,EAAcU,OAFgC,mBAAnCN,EAAmC,iCAAnCA,EAAmC,kBAYxF,OARAA,EAAOO,SAAQ,SAAAV,GACX,IAAMW,EAAiBV,EAASM,EAAQP,EAAUF,MAC9Ca,EACAA,EAAef,OAASI,EAAUJ,MAElCW,EAAOJ,OAAOS,KAAKZ,MAGpBO,EAIJ,SAASM,IAAoD,IAAD,uBAAnCV,EAAmC,yBAAnCA,EAAmC,gBAC/D,MAAO,CAACA,UAYL,SAASW,EAAqBC,EAAwBC,EAAazB,GACtE,OAAOF,EAAc0B,EAAMC,GAAgBzB,GAwCxC,SAAS0B,IAA+E,IAC3F,IAAMC,EAAY,IAAIC,IADqE,mBAA3DC,EAA2D,yBAA3DA,EAA2D,gBAG3F,OADAA,EAAYV,SAAS,SAAAW,GAAE,OAAIH,EAAUI,IAAID,EAAGvB,KAAMuB,EAAGE,WAC9CL,EAGJ,SAASM,EAAiBC,EAAuBC,EAAkCC,EAAwBC,GAC9G,MAAO,CACHD,YACAC,UACAzB,OAAQsB,EAAQtB,OAAOK,KAAI,SAAAR,GAAS,OAMrC,SAAkBA,EAAsBuB,GAC3C,OAAO,eACAvB,EADP,CAEIuB,OAAM,OAAEA,QAAF,IAAEA,IAAW,kBAAMvB,EAAUL,SATKkC,CAAS7B,EAAW0B,EAAQI,IAAI9B,EAAUF,WAa1F,IAEaiC,EAAmBrC,GAFD,GAEsC,GAAG,EAAM,SAE9E,SAASsC,EAAWC,GAChB,OAAOA,EAAS9B,OAAO+B,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEb,OAAOU,GAAYE,EAAEZ,OAAOU,MAGjE,SAASI,EAAkBJ,GAC9B,IAAM9B,EAAS8B,EAAS9B,OACpBmC,EAAc,EASlB,OARcnC,EAAOoC,QAAe,SAACC,EAAKC,GACtC,OAZuB,KAYnBA,EAAM9C,OACN2C,GAAeG,EAAM7C,MACd4C,EAAOC,EAAMlB,OAAOU,GAAYQ,EAAM7C,OAEtC4C,IAEZ,GACYF,EAGZ,SAASI,EAAaT,GACzB,IAAMU,EAAeN,EAAkBJ,GACvC,OAAOzC,KAAKoD,MAAMD,GAmCf,SAASE,EAAYZ,GACxB,OAbG,SAAmBA,GACtB,OAAOD,EAAWC,GAAUM,QAAqB,SAACO,EAA8BL,GAC5E,IAAMM,EAAOD,EAAeE,QAAU,EAAIF,EAAeA,EAAeE,OAAS,QAAKC,EAMtF,OALIF,GAAQA,EAAKpD,QAAU8C,EAAMlB,OAAOU,GACpCc,EAAKnD,MAAQmD,EAAKnD,MAAQ6C,EAAM7C,MAEhCkD,EAAelC,KAAK,CAACjB,MAAO8C,EAAMlB,OAAOU,GAAWrC,MAAO6C,EAAM7C,QAE9DkD,IACR,IAIII,CAAUjB,GAAUM,QAAqB,SAACY,EAAMC,GACnD,IAAMC,EAAYF,EAAKH,OAAS,EAAIG,EAAKA,EAAKH,OAAS,GAAGpD,MAAQ,EAClE,OAAOuD,EAAKG,OAAO,CAAC3D,MAAOyD,EAAKzD,MAAOC,MAAOwD,EAAKxD,MAAQyD,MAC5D,IAeA,SAASE,EAAKtB,EAAoBuB,GACrC,IAAMC,EAAiBxB,EAAS9B,OAAOK,KAAI,SAAAH,GACvC,OAAOA,EAAEP,OAAS0D,EAAYnD,EArMtC,SAAkBA,GACd,OAAO,eAAIA,EAAX,CAAcT,MAAOS,EAAET,MAAQ,IAoMO8D,CAASrD,MAC5CsD,QAAO,SAAAtD,GAAC,OAAIA,EAAET,MAAQ,KACzB,OAAO,eACAqC,EADP,CAEI9B,OAAQsD,IAsBT,SAASG,EAAiB3B,GAC7B,IAAM4B,EAAQhB,EAAYZ,GACpBzB,EAAM,IAAIW,IAChBX,EAAIyB,SAAWA,EACf,IAAM6B,EAAQD,EAAMA,EAAMb,OAAS,GAAGpD,MAQtC,OAPAiE,EAAMnD,SAAQ,SAAAqD,GACV,IAhHuB,KAgHnBA,EAAGpE,MAAkC,CACrC,IAAMqE,EAAO,IAAMD,EAAGnE,MAAQkE,EACxB3D,EAlFlB,SAAyB8B,EAAoBtC,GAIzC,IAHA,IAAMQ,EAAS,GACT8D,EAASjC,EAAWC,GACtBiC,EAAI,EACDA,EAAID,EAAOjB,QAAUiB,EAAOC,GAAG3C,OAAOU,IAAatC,GAAO,CAC7D,GAAIsE,EAAOC,GAAG3C,OAAOU,KAActC,EAC/B,IAAK,IAAIwE,EAAE,EAAGA,EAAIF,EAAOC,GAAGtE,MAAOuE,IAC/BhE,EAAOS,KAAKqD,EAAOC,IAG3BA,IAEJ,OAAO/D,EAsEgBiE,CAAgBnC,EAAU8B,EAAGpE,OAC5Ca,EAAIc,IAAIyC,EAAGpE,MAAO,CAACQ,SAAQ6D,aAG5BxD,EAYJ,SAAS6D,EAAcC,EAA+BC,EAAeC,GACxE,IAAMC,EAAsB,GACxBC,GAAY,EAiBhB,OAhBAJ,EAAY5D,SAAQ,SAACf,EAAOqB,GACxB,IAAM2D,EAASnF,KAAKC,IAAI8E,EAAMvD,EAAK,GAC7B4D,EAAOD,GAAUH,EACjBK,EAAWrF,KAAKC,IAAIkF,EAAQ,EAAG,IAAMH,EACrCM,EAAcF,IAASC,EACvBE,GAAaH,GAAQF,EAC3BA,EAAYE,EACZH,EAAM7D,KAAK,CACPI,MACAb,OAAQR,EAAMQ,OACd6D,KAAMrE,EAAMqE,KACZY,OACAG,YACAD,mBAGDL,E,MCnSJ,SAASO,EAAUC,GACtB,OAAO,0BAAMC,UAAW,SAAWD,EAAMxC,MAAM3C,MAAxC,K,iDCAJ,SAASqF,EAAoBF,GAEhC,IAAMG,EAAYH,EAAMG,UACxB,MAAuB,WAAnBA,EAAUC,KAEN,kBAACC,EAAD,CAAqBC,QAAQ,EAAOzF,KAAMsF,EAAUI,YAAaC,aAAcR,EAAMQ,aAChEC,SAAU,kBAAMT,EAAMU,oBAAmB,IACzCC,SAAU,kBAAMX,EAAMU,oBAAmB,MAI9D,kBAACE,EAAD,CAAqB/F,KAAMsF,EAAUI,YAAaC,aAAcR,EAAMQ,aACjDK,OAAQ,kBAAMb,EAAMc,wBAQ9C,SAAST,EAAT,GAA0G,IAA5EC,EAA2E,EAA3EA,OAAQzF,EAAmE,EAAnEA,KAAM2F,EAA6D,EAA7DA,aAAcC,EAA+C,EAA/CA,SAAUE,EAAqC,EAArCA,SACjEI,EAAc,CAACC,cAAe,UACpC,OACI,yBAAKf,UAAU,gBACVK,EAAS,8BAAOzF,GAAe,kBAACoG,EAAA,EAAD,KAAapG,GAC7C,kBAACqG,EAAA,EAAD,CAAYjB,UAAU,4BAA4BkB,MAAOJ,EAAaK,QAAS,SAAAC,GAAC,OAAIZ,MAApF,mBACCD,EACD,kBAACU,EAAA,EAAD,CAAYjB,UAAU,4BAA4BkB,MAAOJ,EAAaK,QAAS,SAAAC,GAAC,OAAIV,MAApF,sBAOL,SAASC,EAAT,GAAsF,IAAxD/F,EAAuD,EAAvDA,KAAM2F,EAAiD,EAAjDA,aAAcK,EAAmC,EAAnCA,OACrD,OACI,yBAAKZ,UAAU,gBACX,kBAACgB,EAAA,EAAD,KAAapG,EAAb,KACA,kBAACyG,EAAA,EAAD,CACIC,QAASf,EACTgB,SAAU,SAAAH,GAAC,OAAIR,KACfY,MAAM,UACN5G,KAAK,OACL6G,WAAY,CAAE,aAAc,uB,YCyBrC,SAASC,EAAYrH,GACxB,MAAO,CACH8F,KAjDoB,eAkDpB9F,UAMD,SAASsH,EAAWtH,GACvB,MAAO,CACH8F,KAzDmB,cA0DnB9F,UAGD,IC/DMuH,EAA0BC,aAhBf,SAAChG,GACrB,MAAO,CACHwD,MAAOxD,EAAMiG,UAAUzC,MACvBC,KAAMzD,EAAMiG,UAAUxC,SAIH,SAACyC,GACxB,MAAO,CACHC,SAAU,kBAAMD,ED8DWL,GAAY,KC7DvCO,SAAU,kBAAMF,ED4DWL,GAAY,KC3DvCQ,QAAS,kBAAMH,EDqEWJ,GAAW,KCpErCQ,QAAS,kBAAMJ,EDmEWJ,GAAW,QC/DNE,EAEvC,SAA0B9B,GAEoD,IACnEV,EAAqDU,EAArDV,MAAOC,EAA8CS,EAA9CT,KAAM0C,EAAwCjC,EAAxCiC,SAAUC,EAA8BlC,EAA9BkC,SAAUC,EAAoBnC,EAApBmC,QAASC,EAAWpC,EAAXoC,QACjD,OACI,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAChB,kBAACjC,EAAD,CAAqBC,QAAQ,EAAMzF,KAAK,QAAQ2F,aAAclB,EAAOmB,SAAUwB,EAAUtB,SAAUuB,IACnG,kBAAC7B,EAAD,CAAqBC,QAAQ,EAAMzF,KAAK,OAAO2F,aAAcjB,EAAMkB,SAAU0B,EAASxB,SAAUyB,QChBrG,IAAMG,EAAkBT,aAP/B,SAAyBhG,EAAiB0G,GACtC,MAAO,CACHC,SAAU9D,EAAiB6D,EAASxF,UACpC+E,UAAWjG,EAAMiG,aAIMD,EAExB,YAA8F,IAA3EW,EAA0E,EAA1EA,SAAUV,EAAgE,EAAhEA,UAC1BvC,EAAQJ,EAAcqD,EAAUV,EAAUzC,MAAOyC,EAAUxC,MACjE,OACI,kBAACmD,EAAA,EAAD,CAAMC,WAAS,EAAC1C,UAAU,WAAW2C,WAAY,UAC7C,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC9B,kBAACX,EAAA,EAAD,CAAYC,QAAQ,MAApB,aACA,6BACA,kBAACI,EAAA,EAAD,CAAMC,WAAS,EAACM,UAAU,UAElBzD,EAAMjE,KAAI,SAAA2H,GAAI,OACV,kBAACR,EAAA,EAAD,CAAM3G,IAAKmH,EAAKnH,IAAK8G,MAAI,GACrB,kBAACM,EAAD,CAAUD,KAAMA,SAKhC,8BAEA,kBAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAG7B,MAAO,CAACiC,UAAW,WAChD,kBAACvB,EAAD,WAMhB,SAASsB,EAASnD,GACd,IAIIqD,EAJEH,EAAOlD,EAAMkD,KACbI,EAAU,CACZ7B,MAAOyB,EAAKvD,KAAO,QAAU,OAQjC,OAJI0D,EADAH,EAAKpD,UACW,wBAAIG,UAAU,0BAEd,wBAAIA,UAAU,gBAAgBkB,MAAO,CAACoC,YAAa,iBAGnE,6BAAMF,EACN,kBAACX,EAAA,EAAD,CAAMC,WAAS,EAAEM,UAAU,MAAOL,WAAW,aAAaY,QAAS,GAC/D,kBAACd,EAAA,EAAD,CAAMG,MAAI,EAAC1B,MAAK,eAAMmC,EAAN,CAAeF,UAAW,WAAWN,GAAI,EAAGC,GAAI,GAC5D,kBAACV,EAAA,EAAD,CAAYC,QAAQ,MAAOY,EAAKnH,MAEpC,kBAAC2G,EAAA,EAAD,CAAMG,MAAI,EAAC1B,MAAOmC,EAASrD,UAAU,WAAW6C,GAAI,EAAGC,GAAI,GACvD,kBAACV,EAAA,EAAD,CAAYC,QAAQ,SAASY,EAAKnE,KAAK0E,QAAQ,GAA/C,MAEJ,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAAC1B,MAAO,CAACiC,UAAW,QAASN,GAAI,EAAGC,GAAI,GAC9C,kBAACV,EAAA,EAAD,CAAYC,QAAQ,KAAKoB,QAAQ,GAChCR,EAAKhI,OAAOK,KAAI,SAACiC,EAAOmG,GAAR,OACb,kBAAC5D,EAAD,CAAWhE,IAAK4H,EAAOnG,MAAOA,W,iDC3D5CoG,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,YAAa,CACTC,OAAQH,EAAMN,QAAQ,GACtBU,SAAU,KAEdC,YAAa,CACTC,UAAWN,EAAMN,QAAQ,SAOxBa,EAA2BvC,aAFhB,SAAChG,GAAD,MAAsB,CAACY,UAAWZ,EAAMwI,kBAAmBC,WAAYzI,EAAM0I,iBAAiBD,eAC3F,SAACvC,GAAD,MAAyB,CAACyC,aAAc,SAAC/H,GAAD,OAA4BsF,EH4BxF,SAAyBtF,GAC5B,MAAO,CACH0D,KAjCwB,mBAkCxB1D,aG/BgGgI,CAAgBhI,QAChFoF,EAIjC,SAA2B9B,GAA6G,IACpItD,EAAuCsD,EAAvCtD,UAAW6H,EAA4BvE,EAA5BuE,WAAYE,EAAgBzE,EAAhByE,aAK9B,OAAO,6BACH,kBAACxD,EAAA,EAAD,0BACA,kBAAC0D,EAAA,EAAD,CAAarC,QAAQ,WAAWrC,UAAW2D,IAAYI,aACnD,kBAACY,EAAA,EAAD,CACIC,QAAQ,2BACRC,GAAG,qBACHpK,MAAOgC,EAAUqI,UACjBvD,SAAU,SAAAwD,GAAC,OAAIP,GAXOM,EAW+BC,EAAEC,OAAOvK,MAV/D6J,EAAWpJ,MAAK,SAAA+J,GAAC,OAAIA,EAAEH,YAAcA,OADf,IAACA,IAYrBR,EAAWhJ,KAAI,SAAA4J,GAAK,OACjB,kBAACC,EAAA,EAAD,CAAUrJ,IAAKoJ,EAAMJ,UAAWrK,MAAOyK,EAAMJ,WAAYI,EAAMJ,oB,YC3B5E,SAASM,EAAkBC,GAC9B,OAAO/I,EACH+I,EAASd,iBAAiBe,eAC1BvJ,EAAgB,WAAhB,cAAoBsJ,EAASE,iBAAiBC,qBAC9CH,EAAShB,kBACTgB,EAASI,aCXV,SAASC,EAAYC,GACxB,IAAMjJ,EAA2B,GAEjC,OADAiJ,EAAYC,WAAWpK,SAAS,SAAAqK,GAAE,OAAInJ,EAAQmJ,EAAGjL,MAAQiL,EAAGC,gBACrDpJ,ECGJ,IAAMqJ,EAAgClE,aACzC,SAAChG,GAAD,MAAsB,CAACmK,KAAMnK,EAAM0J,iBAAiBI,YAAajJ,QAASb,EAAM4J,gBAChF,SAAC1D,GAAD,MAA0E,CACtEtB,mBAAoB,SAAC3E,EAAazB,GAAd,OAAkC0H,ENwCvD,SAA4BjG,EAAazB,GAC5C,MAAO,CACH8F,KAtC6B,wBAuC7BrE,MAAKzB,UM3C0DoG,CAAmB3E,EAAKzB,KACvFwG,mBAAoB,SAAC/E,GAAD,OAAiBiG,EN8CtC,SAA4BjG,GAC/B,MAAO,CACHqE,KA5C4B,uBA6C5BrE,OMjD8C+E,CAAmB/E,QAJ5B+F,EAO7C,YAG6E,IAHpDmE,EAGmD,EAHnDA,KAAMtJ,EAG6C,EAH7CA,QAAS+D,EAGoC,EAHpCA,mBAAoBI,EAGgB,EAHhBA,mBAIxD,OAAO,kBAACuB,EAAA,EAAD,CAAYC,QAAQ,KAAKnB,MAAO,CAAC+E,WAAY,UAC/CC,OAAOC,KAAKzJ,GAASpB,KAAI,SAAA8K,GAAU,OAChC,kBAACnG,EAAD,CAAqBnE,IAAKsK,EAAY7F,aAAc7D,EAAQ0J,GACvClG,WDVHyF,ECU6BK,EDVMlK,ECUAsK,EDTtDT,EAAYC,WAAW1K,MAAK,SAAA2K,GAAE,OAAIA,EAAGjL,OAASkB,MCUxB2E,mBAAoB,SAACpG,GAAD,OAAqBoG,EAAmB2F,EAAY/L,IACxEwG,mBAAoB,kBAAMA,EAAmBuF,MDZvE,IAAuBT,EAAmC7J,SENjE,IAEauK,EAA0BxE,aAFf,SAAChG,GAAD,MAAsB,CAACkB,SAAUqI,EAAkBvJ,GAAQyK,SAAUzK,EAAM0J,oBAE5D1D,EAEhC,YAAgG,IAArE9E,EAAoE,EAApEA,SAAUuJ,EAA0D,EAA1DA,SACxC,OACI,yBAAKtG,UAAU,YACX,yBAAKA,UAAU,gBACX,kBAACoC,EAAA,EAAD,CAAYC,QAAQ,MAAMiE,EAAS1L,MACnC,kBAACmL,EAAD,MACA,kBAAC3B,EAAD,OAEJ,kBAAC9B,EAAD,CAAiBvF,SAAUA,IAC3B,kBAACwJ,EAAD,CAAYxJ,SAAUA,QAKlC,SAASwJ,EAAT,GAAuD,IAAlCxJ,EAAiC,EAAjCA,SACjB,OAAO,yBAAKiD,UAAU,cAClB,kBAACoC,EAAA,EAAD,qBAA0BjF,EAAkBJ,IAC5C,uBAAGiD,UAAU,cVwMd,SAAmBwG,GACtB,IAAMC,EAAiC,GAIvC,OAHAD,EAAIvL,OAAOO,SAAS,SAAAL,GAChB,IAAI,IAAI6D,EAAI,EAAGA,EAAI7D,EAAET,MAAOsE,IAAKyH,EAAsB/K,KAAtB,eAA+BP,EAA/B,CAAkCT,MAAO,QAEvE+L,EU5MEC,CAAU3J,GAAUzB,KAAI,SAACiC,EAAOmG,GAAR,OACrB,kBAAC5D,EAAD,CAAWhE,IAAK4H,EAAOnG,MAAOA,S,wGCfjCoJ,GAAwB,CACjCC,gBAAiBC,MAORC,GAAb,WAGI,WAAmBlM,EACAmM,EACAzC,EACAgB,GACe,IAAtB0B,EAAqB,uDAAH,EAAG,0BAJdpM,OAIc,KAHdmM,eAGc,KAFdzC,aAEc,KADdgB,iBACc,KAN1B0B,gBAAkB,EAOrBC,KAAKC,cAAcF,GAR3B,6DAgBoC,IAAlBG,EAAiB,uDAAH,EACxBF,KAAKD,gBAAkBG,EAEvB,IADA,IAAIC,EAAgB,EACbA,GAAiBD,GACpBF,KAAKD,gBAAkBI,EACvBA,MArBZ,wCA0BQ,OAAOH,KAAKF,aAAaM,UAAUJ,KAAKD,mBA1BhD,2CA6BgD,IAAD,uBAArB/L,EAAqB,yBAArBA,EAAqB,gBACvCgM,KAAK3B,eAAiBlK,EAAS,WAAT,GAAU6L,KAAK3B,gBAAf,OAAkCrK,MA9BhE,qCA0CQ,OARKgM,KAAKD,gBAAkB,EAAMC,KAAKF,aAAaM,UAAUvJ,SAC1DmJ,KAAKD,kBAEDC,KAAKD,gBAAmBC,KAAKF,aAAaM,UAAUvJ,QAKrDmJ,KAAKK,oBA1CpB,qCAkDQ,OAHIL,KAAKD,gBAAmB,GACxBC,KAAKD,kBAEFC,KAAKK,qBAlDpB,6BAWwBP,EAA6BzC,EAA2BiD,GACxE,OAAO,IAAIT,EAASC,EAAanM,KAAMmM,EAAczC,EAAYyC,EAAaS,gBAAgBD,QAZtG,KClBaE,GAA6C,CACtDC,WAAY,CAAC7C,GAAI,aAAcjK,KAAM,cAAekK,UAAW,MAAO6C,gBAAiB,kBAAM,IAC7FC,aAAc,CAAC/C,GAAI,eAAgBjK,KAAM,gBAAiBkK,UAAW,QAAS6C,gBAAiB,kBAAM,KCclG,SAASE,KACZ,OAAOlM,EACHnB,EAAa,EAAG,GAAG,EAAO,aAC1BA,EAAa,EAAG,GAChBA,EAAa,EAAG,GAChBA,GAAc,EAAG,GACjBA,GAAc,EAAE,GAChBA,GAAc,EAAG,GACjBA,GAAc,EAAG,GACjBA,EAAa,EAAG,GAAG,EAAM,YACzBqC,GAGR,SAASiL,KACL,OAAO1M,EbAJ,SAAqBJ,EAA4BsD,GACpD,IAAMjD,EAAS,CACXJ,OAAQD,EAAaC,OAAOK,KAAI,SAAAC,GAAE,OAAIV,EAAcU,OAElDE,EAAiBV,EAASM,EAAQiD,GAKxC,OAJI7C,IACAA,EAAef,OAAO,GAE1BW,EAAOJ,OAASI,EAAOJ,OAAOwD,QAAO,SAAAlD,GAAE,OAAiB,IAAbA,EAAGb,SACvCW,EaRC0M,CAAYF,KAAU,KACtBrN,GAAc,EAAG,IAkK7B,SAASwN,KACL,IAAMC,EAAqB,oCACrBC,EAAsB,SAACnL,GACzB,OAAOA,EAASL,QAAQuL,IAG5B,MAAO,CACHrN,KAAM,yBACN4K,mBAAoB,CAChB,CAAC5K,KAAM,YAAayB,OAAQ,SAACU,GAAD,OAAcA,EAASN,UAAUkL,gBAAgB5K,KAC7E,CAACnC,KAAM,WAAYyB,OAAQ,SAACU,GAAD,OAAc,EAAImL,EAAoBnL,KACjE,CAACnC,KAAM,WAAYyB,OAAQ,SAACU,GAEpB,IAAMoL,EAAe9J,EAAKtB,EAAU,YAIpC,OAHAoL,EAAazL,QAAb,eACKuL,EAAqB3N,KAAKC,IAAI,EAAG2N,EAAoBnL,GAAY,IAE/DS,EAAa2K,KAE5B,CAACvN,KAAM,YAAUyB,OAAQ,kBAAO,IAChC,CAACzB,KAAM,UAAWyB,OAAQ,kBAAO,KAErCsJ,YAAa,CACTC,WAAY,CAAC,CACThL,KAAMqN,EACN3H,YAAa2H,EACb9H,KAAM,SACN2F,aAAc,MAM9B,SAASsC,KAML,MAAO,CACHxN,KAAM,sBACN4K,mBAAoB,CAChB,CAAC5K,KAAM,YAAayB,OAAQ,SAACU,GAAD,OAAcA,EAASN,UAAUkL,gBAAgB5K,KAC7E,CAACnC,KAAM,WAAYyB,OAAQ,SAACU,GAAD,OAAc,EAAIzC,KAAKC,IAAI,EARjC,SAACwC,GAC1B,OAAOzC,KAAK+N,KAAMtL,EAASL,QAFD,4BAE6C,GAOV4L,CAAqBvL,MAC9E,CAACnC,KAAM,WAAYyB,OAAQ,SAACU,GAAD,OAAcS,EAAaa,EAAKtB,EAAU,eACrE,CAACnC,KAAM,YAAUyB,OAAQ,kBAAO,IAChC,CAACzB,KAAM,UAAWyB,OAAQ,kBAAO,KAErCsJ,YAAa,CACTC,WAAY,CAAC,CACThL,KAhBkB,2BAiBlB0F,YAjBkB,2BAkBlBH,KAAM,SACN2F,aAAc,MAMvB,SAASe,KACZ,MAAO,CACHhC,GAAI,kBACJjK,KAAM,qBACNyM,UAAW,CA7MR,CACHzM,KAAM,gDACN4K,mBAAoB,CAChB,CAAC5K,KAAM,YAAayB,OAAQ,SAACU,GAAD,OAAcA,EAASN,UAAUkL,gBAAgB5K,KAC7E,CAACnC,KAAM,WAAYyB,OAAQ,kBAAO,KAEtCsJ,YAAa,CACTC,WAAY,KAMb,CACHhL,KAAM,gBACN4K,mBAAoB,CAChB,CAAE5K,KAAM,YAAayB,OAAQ,SAACU,GAAD,OAAcA,EAASN,UAAUkL,gBAAgB5K,KAC9E,CAAEnC,KAAM,WAAYyB,OAAQ,kBAAO,IACnC,CAAEzB,KAAM,YAAUyB,OAAQ,kBAAO,IACjC,CAAEzB,KAAM,UAAWyB,OAAQ,kBAAO,KAEtCsJ,YAAa,CACTC,WAAY,KAMb,CACHhL,KAAM,6BACN4K,mBAAoB,CAChB,CAAE5K,KAAM,YAAayB,OAAQ,SAACU,GAAD,OAAcA,EAASN,UAAUkL,gBAAgB5K,KAC9E,CAAEnC,KAAM,WAAYyB,OAAQ,SAACU,GAAD,OAAcA,EAASL,QAAQ,oBAAsB,GAAK,IACtF,CAAE9B,KAAM,YAAUyB,OAAQ,kBAAO,IACjC,CAAEzB,KAAM,UAAWyB,OAAQ,kBAAO,KAEtCsJ,YAAa,CACTC,WAAY,CAAC,CACThL,KAAM,kBACN0F,YAAa,kBACbH,KAAM,UACN2F,cAAc,MAOnB,CACHlL,KAAM,oBACN4K,mBAAoB,CAChB,CAAE5K,KAAM,YAAayB,OAAQ,SAACU,GAAD,OAAcA,EAASN,UAAUkL,gBAAgB5K,KAC9E,CAAEnC,KAAM,WAAYyB,OAAQ,SAACU,GAAD,OAAcA,EAASL,QAAQ,2BAA6B,GAAK,IAC7F,CAAE9B,KAAM,WAAYyB,OAAQ,SAAAU,GAAQ,OAAIS,EAAaa,EAAKtB,EAAU,eACpE,CAAEnC,KAAM,YAAUyB,OAAQ,kBAAO,IACjC,CAAEzB,KAAM,UAAWyB,OAAQ,kBAAO,KAEtCsJ,YAAa,CACTC,WAAY,CAAC,CACThL,KAAM,yBACN0F,YAAa,yBACbH,KAAM,UACN2F,cAAc,MAOnB,CACHlL,KAAM,qBACN4K,mBAAoB,CAChB,CAAC5K,KAAM,YAAayB,OAAQ,SAACU,GAAD,OAAcA,EAASN,UAAUkL,gBAAgB5K,KAC7E,CAACnC,KAAM,WAAYyB,OAAQ,SAACU,GAAD,OAAc,EAAKA,EAASL,QAAQ,yBAC/D,CAAC9B,KAAM,WAAYyB,OAAQ,SAACU,GAAD,OAAcA,EAASL,QAAQ,6BAA+B,GAAK,IAC9F,CAAC9B,KAAM,YAAUyB,OAAQ,kBAAO,IAChC,CAACzB,KAAM,UAAWyB,OAAQ,kBAAO,KAErCsJ,YAAa,CACTC,WAAY,CACR,CACAhL,KAAM,sBACN0F,YAAa,sBACbH,KAAM,SACN2F,aAAc,GAEd,CACIlL,KAAM,2BACN0F,YAAa,2BACbH,KAAM,UACN2F,cAAc,MASvB,CACHlL,KAAM,uBACN4K,mBAAoB,CAChB,CAAC5K,KAAM,YAAayB,OAAQ,SAACU,GAAD,OAAcA,EAASN,UAAUkL,gBAAgB5K,KAC7E,CAACnC,KAAM,WAAYyB,OAAQ,SAACU,GAAD,OAAc,EAAKA,EAASL,QALtC,4BAMjB,CAAC9B,KAAM,WAAYyB,OAAQ,SAAAU,GAAQ,OAAIS,EAAaa,EAAKtB,EAAU,aAAe,IAClF,CAACnC,KAAM,YAAUyB,OAAQ,kBAAO,IAChC,CAACzB,KAAM,UAAWyB,OAAQ,kBAAO,KAErCsJ,YAAa,CACTC,WAAY,CAAC,CACThL,KAZa,yBAab0F,YAba,yBAcbH,KAAM,SACN2F,aAAc,MAQnB,CACHlL,KAAM,2BACN4K,mBAAoB,CAChB,CAAC5K,KAAM,YAAayB,OAAQ,SAACU,GAAD,OAAcA,EAASN,UAAUkL,gBAAgB5K,KAC7E,CAACnC,KAAM,WAAYyB,OAAQ,SAACU,GAAD,OACnBA,EAASL,QANF,wBAM4Bc,EAAaa,EAAKtB,EAAU,aAAe,GAAK,IAC3F,CAACnC,KAAM,WAAYyB,OAAQ,kBAAO,IAClC,CAACzB,KAAM,YAAUyB,OAAQ,kBAAO,IAChC,CAACzB,KAAM,UAAWyB,OAAQ,kBAAO,KAErCsJ,YAAa,CACTC,WAAY,CAAC,CACThL,KAbW,uBAcX0F,YAdW,uBAeXH,KAAM,UACN2F,cAAc,MAwEoBkC,KAAsBI,MAEhEZ,gBAAiB,CACbe,KAlQD5M,EACHnB,EAAa,EAAG,GAAG,EAAO,aAC1BA,EAAa,EAAG,GAChBA,EAAa,EAAG,GAChBA,GAAc,EAAG,GACjBA,GAAc,EAAE,GAChBA,GAAc,EAAG,GACjBA,EAAa,EAAG,GAAG,EAAM,YACzBqC,GA2PIgL,OAAQA,KACRC,KAAMA,KACNU,OArOD7M,EACHnB,EAAa,EAAG,GAAG,EAAO,aAC1BA,EAAa,EAAG,GAChBA,GAAc,EAAG,GACjBA,GAAc,EAAE,GAChBA,GAAc,EAAG,GACjBA,GAAc,EAAG,GACjBA,GAAc,EAAG,GACjBA,GAAc,EAAG,GACjBA,EAAa,EAAG,GAAG,EAAM,YACzBqC,KAoOD,SAAS4L,KACZ,IAL+BnE,EAA2BiD,EAKpDmB,GALyBpE,EAKK,CAChCmD,GAAY,WAAgBA,GAAY,cANcF,EASvD,SARIT,GAAS6B,MAAM9B,KAAkCvC,EAAYiD,IAiBpE,OARAmB,EAASE,mBACLpO,EAAa,EAAG,GAAG,EAAM,aACzBA,EAAa,EAAG,GAAG,EAAM,YACzBA,EAAa,EAAG,GAAG,EAAM,aAI7BkO,EAASxB,cAAc,GAChBwB,ECjRX,IAAMG,GAAkBJ,KAgBlBK,GAAgBD,GAAgBvB,kBAkBhCyB,GAAiBrD,EAAYoD,GAAcnD,aAqB3CqD,GAAmB,CAAC3J,MAAO,EAAGC,KAAM,GAkB7B2J,GAA6DC,aAAsC,CAC5G3E,iBAxEqD,WAA4D,IAA3D1I,EAA0D,uDAAxCgN,GAAiBM,EAAuB,uCAChH,OAAQA,EAAOhJ,MACX,IXlBqB,gBWoBjB,OADAtE,EAAMuN,eACCvN,EACX,IXpBqB,gBWsBjB,OADAA,EAAMwN,eACCxN,EACX,QACI,OAAOA,IA+DIwI,kBAhDqC,WAAgE,IAA/DxI,EAA8D,uDAAtDgN,GAAgBvE,WAAW,GAAI6E,EAAuB,uCACvH,OAAQA,EAAOhJ,MACX,IXpCwB,mBWqCpB,OAAQgJ,EAA4B1M,UACxC,QACI,OAAOZ,IA2CuB0J,iBAzDmB,WAAgD,IAA/C1J,EAA8C,uDAAtCiN,GAAeK,EAAuB,uCACxG,OAAQA,EAAOhJ,MACX,IX9BuB,kBW+BnB,OAAQgJ,EAA2BG,aACvC,QACI,OAAOzN,IAoDyC4J,YAvCF,WAAuD,IAAtDA,EAAqD,uDAAvCsD,GAAgBI,EAAuB,uCAC5G,OAAQA,EAAOhJ,MACX,IXhDuB,kBWiDnB,OAAOuF,EAAayD,EAA2BG,aAAa3D,aAChE,IX5C6B,wBW6CzB,IAAM4D,EAAgBJ,EAChBrN,EAAMyN,EAAczN,IAC1B,OAAOoK,OAAOsD,OAAO,GAAI/D,EAAlBS,OAAA,IAAAA,CAAA,GACFpK,EAAMF,EAAqB6J,EAAa3J,EAAKyN,EAAclP,UAEpE,IXjD4B,uBWkDxB,IAAMoP,EAAsBN,EAC5B,OAAOjD,OAAOsD,OAAO,GAAI/D,EAAlBS,OAAA,IAAAA,CAAA,GACFuD,EAAoB3N,KAAQ2J,EAAYgE,EAAoB3N,OAErE,QACI,OAAO2J,IAuBsD3D,UAlBvB,WAAuC,IAAtCjG,EAAqC,uDAA7BmN,GAAkBG,EAAW,uCAC9EO,EAAkBP,EACxB,OAAQA,EAAOhJ,MACX,IX5DoB,eW6DhB,OAAO+F,OAAOsD,OAAO,GAAI3N,EAAO,CAC5BwD,MAAOlF,EAAc0B,EAAMwD,MAAOqK,EAAgBrP,UAE1D,IX/DmB,cWgEf,OAAO6L,OAAOsD,OAAO,GAAI3N,EAAO,CAC5ByD,KAAMnF,EAAc0B,EAAMyD,KAAMoK,EAAgBrP,UAExD,QACI,OAAOwB,MClCnB,IAAMwJ,GAjCN,WAII,IAAMsE,EAVV,WACI,IAAMC,EAAqBC,aAAaC,QAAQ,4BAChD,OAAOF,EAAqBG,KAAKC,MAAMJ,QAAsB7L,EAQrCkM,GACxB,GAAIN,EAAiB,CACjB,IAAM5C,EAA8BJ,GAAUgD,EAAgBO,gBACxD5F,EAAaqF,EAAgBrF,WAAWhJ,KAAI,SAAA6O,GAAG,OAAI1C,GAAa0C,MAChEzB,EAAW,IAAI5B,GACjB6C,EAAgB/O,KAAMmM,EAAczC,EACpCqF,EAAgBpN,QAASoN,EAAgB3C,iBACvCvK,EAAYgL,GAAakC,EAAgBS,kBAC/C,MAAO,CACH7F,iBAAkBmE,EAClBnD,iBAAkBmD,EAASpB,kBAC3BjD,kBAAmB5H,EACnBqF,UAAW,CAACzC,MAAO,EAAGC,KAAM,GAC5BmG,YAAakE,EAAgBU,gBAGjC,IAAM3B,EAlBCD,KAmBD6B,EAAsB5B,EAASpB,kBACrC,MAAO,CACH/C,iBAAkBmE,EAClBnD,iBAAkB+E,EAClBjG,kBAAmBqE,EAASpE,WAAW,GACvCxC,UAAW,CAACzC,MAAO,EAAGC,KAAM,GAC5BmG,YAAaC,EAAY4E,EAAoB3E,cAMxC4E,GACjBC,QAAQC,IAAI,uBAAwBpF,IAC7B,IAAIqF,GACPC,aAA0C1B,GAAa5D,IAM3DqF,GAAME,WAAU,WACZ,IAAMlC,EAAWgC,GAAMG,WAAWtG,iBAC5BuG,EAAoC,CACtClQ,KAAM8N,EAAS9N,KACfsP,eAAgBxB,EAAS3B,aAAalC,GACtCtI,QAASmM,EAASpD,eAClBhB,WAAYoE,EAASpE,WAAWhJ,KAAI,SAAA2J,GAAC,OAAIA,EAAEJ,MAC3CmC,gBAAiB0B,EAAS1B,gBAC1BoD,iBAAkBM,GAAMG,WAAWxG,kBAAkBQ,GACrDwF,eAAgBK,GAAMG,WAAWpF,aAErCoE,aAAakB,QAAQ,2BAA4BhB,KAAKiB,UAAUF,OCpCrDG,OA/Bf,WACI,IAAMvC,EAAWgC,GAAMG,WAAWtG,iBAElC,SAAS2G,EAAe5E,GACpBoE,GAAM3I,Sb0BH,CACH5B,KA7BuB,kBA8BvBmJ,aa5BoChD,IAGxC,IAAM6E,EClBH,WACH,IAAMC,EAAiB,CACnB,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBAGEC,EAAoB,UAmB1B,MAAO,CACHxH,MAnBUyH,aAAoBC,aAAe,CAC7CC,WAAY,CACRC,WAAY,CAACJ,GAAmBjN,OAAOgN,GAAgBM,KAAK,KAC5DC,SAAU,IAEdC,QAAS,CACLC,YAAa,EACb1L,KAAM,OACN2L,QAAS,CACLC,KAAM,WAEVC,UAAW,CACPD,KAAM,eAQdE,iBAHqB,CAACZ,GAAmBjN,OAAOgN,GAAgBM,KAAK,MDdvDQ,GAClB,OACA,kBAACC,GAAA,EAAD,CAAetI,MAAOsH,EAAUtH,OAC5B,kBAACuI,GAAA,EAAD,KACI,kBAAC,IAAD,CAAU1B,MAAOA,IACb,yBAAK1K,UAAU,OACX,kBAACoC,EAAA,EAAD,CAAYlB,MAAO,CAACuK,WAAYN,EAAUc,iBAAkB9I,UAAW,UAC3Dd,QAAQ,KAAKb,MAAM,YAAY6K,eAAgB,CAACC,GAAI,UAAWtM,UAAU,cAChF0I,EAAS9N,MAEd,kBAAC2R,GAAA,EAAD,CAAWvM,UAAU,gBAAgBwM,SAAS,MAC1C,kBAACC,GAAA,EAAD,CAAKtJ,UAAW,UACZ,kBAACuJ,GAAA,EAAD,CAAQlL,MAAM,YAAYL,QAAS,kBAAM+J,EAAexC,EAASW,kBAAjE,QACA,kBAACqD,GAAA,EAAD,CAAQlL,MAAM,YAAYL,QAAS,kBAAM+J,EAAexC,EAASU,kBAAjE,SAEJ,kBAAC/C,EAAD,YEvBJsG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACM,kBAAC,GAAD,OAENC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpD,QAAQoD,MAAMA,EAAMC,c","file":"static/js/main.14504219.chunk.js","sourcesContent":["export function incDecNatural(previous: number, incDec: boolean) {\n    return incDec ? previous + 1 : Math.max(0, previous - 1);\n}\n\nexport function repeat(num: number, f: () => void) {\n    for (let i = 0; i < num; i++) {\n        f();\n    }\n}","import {AHCharacter} from \"./AHCharacter\";\nimport {incDecNatural} from \"../Utils\";\n\nexport interface TokenSpec {\n    value: number,\n    count: number,\n    name: string,\n    chaos: boolean\n}\nexport type EffectSpec = (tokenBag: TokenBag) => number;\n\nexport interface Token extends TokenSpec {\n    effect: EffectSpec;\n}\n\nexport function tokenSpecDef(value: number, count: number, chaos = false, name?: string): TokenSpec {\n    return {\n        value, count, chaos,\n        name: name ?? \"Token\" + value,\n    }\n}\n\nfunction copyTokenSpec(tokenSpec: TokenSpec): TokenSpec {\n    return {\n        ...tokenSpec\n    }\n}\n\nfunction decCount(t: Token) {\n    return {...t, count: t.count - 1};\n}\n\nexport interface TokenBagSpec {\n    tokens: TokenSpec[];\n}\n\nfunction findName(tokenBagSpec: TokenBagSpec, name: string): TokenSpec | undefined {\n    return tokenBagSpec.tokens.find(t => t.name === name);\n}\n\nexport function removeToken(tokenBagSpec: TokenBagSpec, tokenName: string): TokenBagSpec {\n    const newBag = {\n        tokens: tokenBagSpec.tokens.map(ts => copyTokenSpec(ts))\n    }\n    const tokenSpecInBag = findName(newBag, tokenName);\n    if (tokenSpecInBag) {\n        tokenSpecInBag.count-=1;\n    }\n    newBag.tokens = newBag.tokens.filter(ts => ts.count === 0);\n    return newBag;\n}\n\nexport function addTokens(tokenBagSpec: TokenBagSpec, ...tokens: TokenSpec[]): TokenBagSpec {\n    const newBag = {\n        tokens: tokenBagSpec.tokens.map(ts => copyTokenSpec(ts))\n    }\n    tokens.forEach(tokenSpec => {\n        const tokenSpecInBag = findName(newBag, tokenSpec.name);\n        if (tokenSpecInBag) {\n            tokenSpecInBag.count += tokenSpec.count\n        } else {\n            newBag.tokens.push(tokenSpec);\n        }\n    })\n    return newBag;\n}\n\n\nexport function buildBagSpec(...tokens: TokenSpec[]): TokenBagSpec {\n    return {tokens}\n}\n\nexport function allTokenSpecs(bagSpec: TokenBagSpec): TokenSpec[] {\n    const allTokensIndividually: TokenSpec[] = [];\n    bagSpec.tokens.forEach( t => {\n        for(let i = 0; i < t.count; i++) allTokensIndividually.push({...t, count: 1});\n    })\n    return allTokensIndividually;\n}\n\nexport type ScenarioContext = { [key: string]: number|boolean };\nexport function incDecContextNatural(state: ScenarioContext, key: string, incDec: boolean) {\n    return incDecNatural(state[key] as number, incDec);\n}\nexport function incContextValue(context: ScenarioContext, key: string): ScenarioContext {\n    const newValue: number = ((context[key] as number) ?? 0) + 1;\n    const newContext = {\n        ...context,\n        [key]: newValue\n    }\n    return newContext;\n}\n\nexport function decContextValue(context: ScenarioContext, key: string): ScenarioContext {\n    let oldValue: number = (context[key] as number) ?? 0;\n    let newContext = context;\n    if (oldValue > 0) {\n        const newValue = oldValue - 1;\n        newContext = {\n            ...context,\n            [key]: newValue\n        }\n    }\n    return newContext;\n}\n\nexport function toggleContextValue(context: ScenarioContext, key: string): ScenarioContext {\n    const oldValue = context[key] as boolean;\n    return {\n        ...context,\n        [key]: !oldValue\n    };\n}\n\nexport interface TokenBag {\n    context: ScenarioContext;\n    character: AHCharacter;\n    tokens: Token[];\n}\n\nexport type ScenarioEffectSpecs = { name: string, effect: EffectSpec }[];\n\nexport function buildEffectSpecs(...effectSpecs: ScenarioEffectSpecs): Map<string, EffectSpec> {\n    const effectMap = new Map<string, EffectSpec>();\n    effectSpecs.forEach( ns => effectMap.set(ns.name, ns.effect));\n    return effectMap;\n}\n\nexport function buildBagFromSpec(bagSpec: TokenBagSpec, effects: Map<string, EffectSpec>, character: AHCharacter, context: ScenarioContext): TokenBag {\n    return {\n        character,\n        context,\n        tokens: bagSpec.tokens.map(tokenSpec => tokenDef(tokenSpec, effects.get(tokenSpec.name)))\n    }\n}\n\n\n\nexport function tokenDef(tokenSpec: TokenSpec, effect?: EffectSpec): Token {\n    return {\n        ...tokenSpec,\n        effect: effect ?? (() => tokenSpec.value),\n    }\n}\n\nconst FALLO_AUTOMATICO_VALUE = -99\n\nexport const FALLO_AUTOMATICO = tokenSpecDef(FALLO_AUTOMATICO_VALUE, 1, true, \"Fallo\");\n\nfunction sortTokens(tokenBag: TokenBag) {\n    return tokenBag.tokens.sort((a, b) => b.effect(tokenBag) - a.effect(tokenBag));\n}\n\nexport function tokenFloatAverage(tokenBag: TokenBag) {\n    const tokens = tokenBag.tokens;\n    let numOfTokens = 0;\n    const total = tokens.reduce<number>((sum, token) => {\n        if (token.value !== FALLO_AUTOMATICO_VALUE) {\n            numOfTokens += token.count;\n            return sum + (token.effect(tokenBag) * token.count)\n        } else {\n            return sum;\n        }\n    }, 0);\n    return total / numOfTokens;\n}\n\nexport function tokenAverage(tokenBag: TokenBag): number {\n    const floatAverage = tokenFloatAverage(tokenBag);\n    return Math.floor(floatAverage);\n}\n\ninterface ValueCount {\n    value: number;\n    count: number;\n}\n\nfunction tokensWithValue(tokenBag: TokenBag, value: number): Token[] {\n    const tokens = [];\n    const sorted = sortTokens(tokenBag);\n    let i = 0;\n    while (i < sorted.length && sorted[i].effect(tokenBag) >= value) {\n        if (sorted[i].effect(tokenBag) === value) {\n            for (let j=0; j < sorted[i].count; j++) {\n                tokens.push(sorted[i]);\n            }\n        }\n        i++;\n    }\n    return tokens;\n}\n\nexport function histogram(tokenBag: TokenBag) {\n    return sortTokens(tokenBag).reduce<ValueCount[]>((previousValues: ValueCount[], token: Token) => {\n        const last = previousValues.length >= 1 ? previousValues[previousValues.length - 1] : undefined;\n        if (last && last.value === token.effect(tokenBag)) {\n            last.count = last.count + token.count;\n        } else {\n            previousValues.push({value: token.effect(tokenBag), count: token.count});\n        }\n        return previousValues;\n    }, []);\n}\n\nexport function accumulated(tokenBag: TokenBag) {\n    return histogram(tokenBag).reduce<ValueCount[]>((prev, curr: ValueCount) => {\n        const prevValue = prev.length > 0 ? prev[prev.length - 1].count : 0;\n        return prev.concat({value: curr.value, count: curr.count + prevValue});\n    }, []);\n}\n\n\n\nexport function sealAll(tokenBag: TokenBag, tokenName: string): TokenBag {\n    const tokensFiltered: Token[] = tokenBag.tokens.map(t => {\n        return t.name !== tokenName ? t : null\n    }).filter(t => t !== null) as Token[];\n    return {\n        ...tokenBag,\n        tokens: tokensFiltered,\n    }\n}\n\nexport function seal(tokenBag: TokenBag, tokenName: string): TokenBag {\n    const tokensFiltered = tokenBag.tokens.map(t => {\n        return t.name !== tokenName ? t : decCount(t)\n    }).filter(t => t.count > 0)\n    return {\n        ...tokenBag,\n        tokens: tokensFiltered\n    }\n}\n\nexport function allTokens(bag: TokenBag): Token[] {\n    const allTokensIndividually: Token[] = [];\n    bag.tokens.forEach( t => {\n        for(let i = 0; i < t.count; i++) allTokensIndividually.push({...t, count: 1});\n    })\n    return allTokensIndividually;\n}\n\n\n// TokenBagPassZone\nexport interface WithTokenBag {\n    tokenBag: TokenBag;\n}\nexport interface ITokensInPassLine {\n    tokens: Token[];\n    prob: number;\n}\nexport type TokenBagPassZone = Map<number, ITokensInPassLine> & WithTokenBag;\nexport function tokenBagPassZone(tokenBag: TokenBag): TokenBagPassZone {\n    const accum = accumulated(tokenBag);\n    const map = new Map<number, ITokensInPassLine>() as TokenBagPassZone;\n    map.tokenBag = tokenBag;\n    const total = accum[accum.length - 1].count;\n    accum.forEach(vc => {\n        if (vc.value !== FALLO_AUTOMATICO_VALUE) {\n            const prob = 100 * vc.count / total;\n            const tokens = tokensWithValue(tokenBag, vc.value);\n            map.set(vc.value, {tokens, prob});\n        }\n    });\n    return map;\n}\n\nexport interface ISkillLine {\n    key: number;\n    tokens: Token[];\n    prob: number;\n    pass: boolean;\n    firstFail: boolean;\n    currentProb: boolean;\n}\n\nexport function passZoneLines(tokenBagMap: TokenBagPassZone, skill: number, test: number): ISkillLine[] {\n    const lines: ISkillLine[] = [];\n    let stillPass = true;\n    tokenBagMap.forEach((value, key) => {\n        const result = Math.max(skill+key, 0);\n        const pass = result >= test;\n        const nextPass = Math.max(result -1, 0) >= test;\n        const currentProb = pass && !nextPass;\n        const firstFail = !pass && stillPass;\n        stillPass = pass;\n        lines.push({\n            key,\n            tokens: value.tokens,\n            prob: value.prob,\n            pass,\n            firstFail,\n            currentProb\n        });\n    });\n    return lines;\n}\n\nexport function printSkillLine(tokenBagMap: TokenBagPassZone, skill: number, test: number): string {\n    let output = \"\";\n    output+=\"******************\\n\";\n    output+=`Skill: ${skill}, Test: ${test}\\n`;\n    output+=\"******************\\n\";\n    const lines = passZoneLines(tokenBagMap, skill, test);\n    lines.forEach(line => {\n        const keyFormat = line.key.toString().padStart(2, \" \");\n        if (line.firstFail) {\n            output+=\"------------------\\n\";\n        }\n        output+=`${keyFormat} => ${line.prob.toFixed(2)}% ${line.currentProb ? \"<----\":\"     \"}`;\n        output+=\"[\" + line.tokens.map(t => t.name).join(',') + \"]\\n\";\n    });\n    output+=\"******************\\n\";\n    return output;\n}\n\nexport function nnDec(nn: number): number {\n    return Math.max(nn -1 , 0);\n}\n\n\n","import {TokenSpec} from \"./Token\";\nimport React from \"react\";\n\nexport function TokenSpan(props: {token: TokenSpec}){\n    return <span className={\"Token \" + props.token.name}>T</span>\n}","import React from \"react\";\nimport {IContextValueSpec} from \"./Scenario\";\nimport {IconButton, InputLabel, Switch} from \"@material-ui/core\";\n\nexport function ContextValueChanger(props: {\n    currentValue: number | boolean, valueSpec: IContextValueSpec, incDecContextValue: (incDec: boolean) => void, toggleContextValue: () => void}) {\n    const valueSpec = props.valueSpec;\n    if (valueSpec.type === \"number\") {\n        return (\n            <NumericParamChanger inline={false} name={valueSpec.description} currentValue={props.currentValue as number}\n                                 incValue={() => props.incDecContextValue(true)}\n                                 decValue={() => props.incDecContextValue(false)} />\n        )\n    } else {\n        return (\n            <BooleanParamChanger name={valueSpec.description} currentValue={props.currentValue as boolean}\n                                 toggle={() => props.toggleContextValue()}/>\n        )\n    }\n}\n\ntype NumericParamChangerProps =\n    { inline: boolean, name: string, currentValue: number, incValue: () => void, decValue: () => void };\n\nexport function NumericParamChanger({inline, name, currentValue, incValue, decValue}: NumericParamChangerProps) {\n    const incDecStyle = {verticalAlign: \"middle\"};\n    return (\n        <div className=\"ParamChanger\">\n            {inline ? <span>{name}</span> : <InputLabel>{name}</InputLabel>}\n            <IconButton className=\"IconAction material-icons\" style={incDecStyle} onClick={_ => incValue()}>arrow_circle_up</IconButton>\n            {currentValue}\n            <IconButton className=\"IconAction material-icons\" style={incDecStyle} onClick={_ => decValue()}>arrow_circle_down</IconButton>\n        </div>\n    )\n}\n\ntype BooleanParamChangerProps = { name: string, currentValue: boolean, toggle: () => void };\n\nexport function BooleanParamChanger({name, currentValue, toggle}: BooleanParamChangerProps) {\n    return (\n        <div className=\"ParamChanger\">\n            <InputLabel>{name}:</InputLabel>\n            <Switch\n                checked={currentValue}\n                onChange={_ => toggle()}\n                color=\"primary\"\n                name=\"name\"\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n            />\n        </div>\n    )\n}","import {Action} from \"redux\";\nimport {AHCharacter} from \"./tok/AHCharacter\";\nimport {IScenarioSpec} from \"./tok/Scenario\";\n\nexport interface IAppAction extends Action {}\nexport interface ICampaignAction extends IAppAction {}\nexport interface IScenarioAction extends IAppAction { scenarioSpec: IScenarioSpec }\nexport interface ICharacterAction extends IAppAction { character: AHCharacter }\nexport interface IContextAction extends IAppAction { key: string }\nexport interface IIncDecAction extends IAppAction { incDec: boolean }\n\n// Campaign\nexport const NEXT_SCENARIO = 'NEXT_SCENARIO';\nexport const PREV_SCENARIO = 'PREV_SCENARIO';\n// Scenario\nexport const CHANGE_SCENARIO = 'CHANGE_SCENARIO';\n\n// Character\nexport const CHANGE_CHARACTER = 'CHANGE_CHARACTER';\n\n// Context\nexport const INC_DEC_CONTEXT_VALUE = 'INC_DEC_CONTEXT_VALUE';\nexport const TOGGLE_CONTEXT_VALUE = 'TOGGLE_CONTEXT_VALUE';\n\n// SkillTest\nexport const CHANGE_SKILL = 'CHANGE_SKILL';\nexport const CHANGE_TEST = 'CHANGE_TEST';\n\n\nexport function advanceScenario(): ICampaignAction {\n    return {\n        type: NEXT_SCENARIO\n    }\n}\n\nexport function getBackScenario(): ICampaignAction {\n    return {\n        type: PREV_SCENARIO\n    }\n}\n\n// Scenario\nexport function changeScenario(scenarioSpec: IScenarioSpec): IScenarioAction {\n    return {\n        type: CHANGE_SCENARIO,\n        scenarioSpec\n    }\n}\n// Character\nexport function changeCharacter(character: AHCharacter): ICharacterAction {\n    return {\n        type: CHANGE_CHARACTER,\n        character\n    }\n}\n\n// Context\nexport function incDecContextValue(key: string, incDec: boolean): IContextAction & IIncDecAction {\n    return {\n        type: INC_DEC_CONTEXT_VALUE,\n        key, incDec\n    }\n}\n\nexport function toggleContextValue(key: string): IContextAction {\n    return {\n        type: TOGGLE_CONTEXT_VALUE,\n        key\n    }\n}\n\n// SkillTest\nexport function changeSkill(incDec: boolean): IIncDecAction {\n    return {\n        type: CHANGE_SKILL,\n        incDec\n    }\n}\nexport const decreaseSkill = () => changeSkill(false);\nexport const increaseSkill = () => changeSkill(true);\n\nexport function changeTest(incDec: boolean): IIncDecAction {\n    return {\n        type: CHANGE_TEST,\n        incDec\n    }\n}\nexport const decreaseTest = () => changeTest(false);\nexport const increaseTest = () => changeTest(true);","import {Typography} from \"@material-ui/core\";\nimport {NumericParamChanger} from \"./ParamChanger\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport {AppState} from \"../AppState\";\nimport {Dispatch} from \"redux\";\nimport {decreaseSkill, decreaseTest, increaseSkill, increaseTest} from \"../AppActions\";\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        skill: state.skillTest.skill,\n        test: state.skillTest.test\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        incSkill: () => dispatch(increaseSkill()),\n        decSkill: () => dispatch(decreaseSkill()),\n        incTest: () => dispatch(increaseTest()),\n        decTest: () => dispatch(decreaseTest())\n    }\n}\n\nexport const CurrentSkillTestChanger = connect(mapStateToProps, mapDispatchToProps)(SkillTestChanger);\n\nfunction SkillTestChanger(props: {skill: number, test: number,\n                                  incSkill: () => void, decSkill: () => void,\n                                  incTest: () => void, decTest: () => void}) {\n    const {skill, test, incSkill, decSkill, incTest, decTest} = props;\n    return (\n        <Typography variant=\"h5\">\n            <NumericParamChanger inline={true} name=\"Skill\" currentValue={skill} incValue={incSkill} decValue={decSkill}/>\n            <NumericParamChanger inline={true} name=\"Test\" currentValue={test} incValue={incTest} decValue={decTest}/>\n        </Typography>\n    );\n}","import React from \"react\";\nimport {passZoneLines, ISkillLine, TokenBagPassZone, TokenBag, tokenBagPassZone} from \"./Token\";\nimport \"./Tok.css\"\nimport {TokenSpan} from \"./TokenSpan\";\nimport {Grid, Typography} from \"@material-ui/core\";\nimport {CurrentSkillTestChanger} from \"./SkillTestChanger\";\nimport {SkillTest} from \"./SkillTest\";\nimport {connect} from \"react-redux\";\nimport {AppState} from \"../AppState\";\n\nfunction mapStateToProps(state: AppState, ownProps: {tokenBag: TokenBag}) {\n    return {\n        passZone: tokenBagPassZone(ownProps.tokenBag),\n        skillTest: state.skillTest\n    }\n}\n\nexport const CurrentPassZone = connect(mapStateToProps)(PassZone);\n\nexport function PassZone({passZone, skillTest}: {passZone: TokenBagPassZone, skillTest: SkillTest}) {\n    const lines = passZoneLines(passZone, skillTest.skill, skillTest.test);\n    return (\n        <Grid container className=\"PassZone\" alignItems={\"center\"}>\n            <Grid item xs={12} sm={8} md={6} >\n            <Typography variant=\"h4\">Pass zone</Typography>\n            <hr />\n            <Grid container direction=\"column\">\n                {\n                    lines.map(line => (\n                        <Grid key={line.key} item>\n                            <PassLine line={line} />\n                        </Grid>\n                    ))\n                }\n            </Grid>\n            <hr />\n            </Grid>\n            <Grid item xs={12} sm={4} md={6} style={{textAlign: \"center\"}}>\n                <CurrentSkillTestChanger />\n            </Grid>\n        </Grid>\n    )\n}\n\nfunction PassLine(props: {line: ISkillLine}) {\n    const line = props.line;\n    const liStyle = {\n        color: line.pass ? \"green\" : \"red\",\n    }\n    let lineSeparator;\n    if (line.firstFail) {\n        lineSeparator = <hr className=\"PassSeparator Current\"/>;\n    } else {\n        lineSeparator = <hr className=\"PassSeparator\" style={{borderColor: \"transparent\"}}/>;\n    }\n    return (\n        <div>{lineSeparator}\n        <Grid container  direction=\"row\"  alignItems=\"flex-start\" spacing={1}>\n            <Grid item style={{...liStyle, textAlign: \"center\"}} xs={2} sm={1}>\n                <Typography variant=\"h5\" >{line.key}</Typography>\n            </Grid>\n            <Grid item style={liStyle} className=\"LineProb\" xs={2} sm={2}>\n                <Typography variant=\"body1\">{line.prob.toFixed(2)}%</Typography>\n            </Grid>\n            <Grid item style={{textAlign: \"left\"}} xs={8} sm={9}>\n                <Typography variant=\"h3\" noWrap={true}>\n                {line.tokens.map((token, index) => (\n                    <TokenSpan key={index} token={token} />\n                ))}\n                </Typography>\n            </Grid>\n        </Grid>\n        </div>\n    )\n}\n","import {createStyles, FormControl, InputLabel, makeStyles, MenuItem, Select, Theme} from \"@material-ui/core\";\nimport {AppState} from \"../AppState\";\nimport {Dispatch} from \"redux\";\nimport {AHCharacter} from \"./AHCharacter\";\nimport {changeCharacter} from \"../AppActions\";\nimport {connect} from \"react-redux\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        formControl: {\n            margin: theme.spacing(1),\n            minWidth: 120,\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n    }),\n);\n\nconst mapStateToProps = (state: AppState) => ({character: state.selectedCharacter, characters: state.selectedCampaign.characters});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({setCharacter: (character: AHCharacter) => dispatch(changeCharacter(character))});\nexport const CurrentCharacterSelector = connect(\n    mapStateToProps,\n    mapDispatchToProps)(CharacterSelector);\n\nexport function CharacterSelector(props: {character: AHCharacter, characters: AHCharacter[], setCharacter: (character: AHCharacter) => void}) {\n    const {character, characters, setCharacter} = props;\n    const findCharacterByShortName = (shortName: string): AHCharacter | undefined => {\n        return characters.find(c => c.shortName === shortName);\n    }\n\n    return <div>\n        <InputLabel>Personaje actual:</InputLabel>\n        <FormControl variant=\"standard\" className={useStyles().formControl}>\n            <Select\n                labelId=\"character-selector-label\"\n                id=\"character-selector\"\n                value={character.shortName}\n                onChange={e => setCharacter(findCharacterByShortName(e.target.value as string)!)}>\n                {characters.map(aChar => (\n                    <MenuItem key={aChar.shortName} value={aChar.shortName}>{aChar.shortName}</MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    </div>;\n}","import {Campaign} from \"./tok/Campaign\";\nimport {IScenarioSpec} from \"./tok/Scenario\";\nimport {buildBagFromSpec, buildEffectSpecs, ScenarioContext} from \"./tok/Token\";\nimport {SkillTest} from \"./tok/SkillTest\";\nimport {AHCharacter} from \"./tok/AHCharacter\";\n\nexport interface AppState {\n    selectedCampaign: Campaign;\n    selectedScenario: IScenarioSpec;\n    selectedCharacter: AHCharacter;\n    gameContext: ScenarioContext;\n    skillTest: SkillTest;\n}\n\nexport function buildBagFromState(appState: AppState) {\n    return buildBagFromSpec(\n        appState.selectedCampaign.currentBagSpec,\n        buildEffectSpecs(...appState.selectedScenario.scenarioEffectSpec),\n        appState.selectedCharacter,\n        appState.gameContext\n    );\n}\n","import {ScenarioContext, ScenarioEffectSpecs} from \"./Token\";\n\nexport interface IScenarioSpec {\n    name: string;\n    scenarioEffectSpec: ScenarioEffectSpecs;\n    contextSpec: IScenarioContextSpec\n}\n\nexport function initContext(contextSpec: IScenarioContextSpec): ScenarioContext {\n    const context: ScenarioContext = {};\n    contextSpec.valuesSpec.forEach( vs => context[vs.name] = vs.initialValue)\n    return context;\n}\n\nexport interface IScenarioContextSpec {\n    valuesSpec: IContextValueSpec[];\n}\n\nexport function findValueSpec(contextSpec: IScenarioContextSpec, key: string) {\n    return contextSpec.valuesSpec.find(vs => vs.name === key);\n}\n\nexport type IContextValueType = \"number\" | \"boolean\";\n\nexport interface IContextValueSpec {\n    name: string;\n    description: string;\n    initialValue: number | boolean;\n    type: IContextValueType;\n}\n","import {connect} from \"react-redux\";\nimport {AppState} from \"../AppState\";\nimport React, {Dispatch} from \"react\";\nimport {\n    IContextAction,\n    IIncDecAction,\n    incDecContextValue,\n    toggleContextValue\n} from \"../AppActions\";\nimport {findValueSpec, IScenarioContextSpec} from \"./Scenario\";\nimport {Typography} from \"@material-ui/core\";\nimport {ContextValueChanger} from \"./ParamChanger\";\nimport {ScenarioContext} from \"./Token\";\n\nexport const CurrentScenarioContextManager = connect(\n    (state: AppState) => ({spec: state.selectedScenario.contextSpec, context: state.gameContext}),\n    (dispatch: Dispatch<IContextAction | IContextAction & IIncDecAction>) => ({\n        incDecContextValue: (key: string, incDec: boolean) => dispatch(incDecContextValue(key, incDec)),\n        toggleContextValue: (key: string) => dispatch(toggleContextValue(key))\n    })\n)(ContextManager);\nfunction ContextManager({spec, context, incDecContextValue, toggleContextValue}:\n                               {spec: IScenarioContextSpec, context: ScenarioContext,\n                                incDecContextValue: (key: string, incDec: boolean) => void,\n                                toggleContextValue: (key: string) => void}) {\n    return <Typography variant=\"h5\" style={{paddingTop: \"2vmin\"}}>\n        {Object.keys(context).map(contextKey => (\n            <ContextValueChanger key={contextKey} currentValue={context[contextKey]}\n                                 valueSpec={(findValueSpec(spec, contextKey)!)}\n                                 incDecContextValue={(incDec: boolean) => incDecContextValue(contextKey, incDec)}\n                                 toggleContextValue={() => toggleContextValue(contextKey)}/>\n        ))}\n    </Typography>\n\n}","import React from \"react\";\nimport {IScenarioSpec} from \"./Scenario\";\nimport {CurrentPassZone} from \"./PassZone\";\nimport {allTokens, TokenBag, tokenFloatAverage} from \"./Token\";\nimport {TokenSpan} from \"./TokenSpan\";\nimport {Typography} from \"@material-ui/core\";\nimport {CurrentCharacterSelector} from \"./CharacterSelector\";\nimport {connect} from \"react-redux\";\nimport {AppState, buildBagFromState} from \"../AppState\";\nimport {CurrentScenarioContextManager} from \"./ContextManager\";\n\n\nconst mapStateToProps = (state: AppState) => ({tokenBag: buildBagFromState(state), scenario: state.selectedScenario});\n\nexport const CurrentScenarioPassZone = connect(mapStateToProps)(ScenarioPassZone);\n\nexport function ScenarioPassZone({tokenBag, scenario}: {tokenBag: TokenBag, scenario: IScenarioSpec}) {\n    return (\n        <div className=\"Scenario\">\n            <div className=\"ScenarioInfo\">\n                <Typography variant=\"h3\">{scenario.name}</Typography>\n                <CurrentScenarioContextManager />\n                <CurrentCharacterSelector />\n            </div>\n            <CurrentPassZone tokenBag={tokenBag}/>\n            <BagDisplay tokenBag={tokenBag} />\n        </div>\n    );\n}\n\nfunction BagDisplay({tokenBag}: {tokenBag: TokenBag}) {\n    return <div className=\"BagDisplay\">\n        <Typography>Bag average: {tokenFloatAverage(tokenBag)}</Typography>\n        <p className=\"TokenStrip\">\n            {allTokens(tokenBag).map((token, index) => (\n                <TokenSpan key={index} token={token}/>\n            ))}\n        </p>\n    </div>\n}\n\n","import {IScenarioSpec} from \"./Scenario\";\nimport {addTokens, TokenBagSpec, TokenSpec} from \"./Token\";\nimport {AHCharacter} from \"./AHCharacter\";\nimport {buildElCirculoRotoCampaignSpec} from \"./ElCirculoRoto\";\n\nexport type AHLevel = \"easy\" | \"normal\" | \"hard\" | \"expert\";\ntype IBagSpecByLevel = {\n    [key in AHLevel]: TokenBagSpec;\n};\n\nexport interface ICampaignSpec {\n    id: string;\n    name: string;\n    scenarios: IScenarioSpec[];\n    bagSpecsByLevel: IBagSpecByLevel;\n}\n\ninterface ICampaigns {\n    [key: string]: ICampaignSpec\n}\nexport const Campaigns: ICampaigns = {\n    TheCircleUndone: buildElCirculoRotoCampaignSpec() as ICampaignSpec\n}\n\n\ninterface ICampaign {\n}\n\nexport class Campaign implements ICampaign {\n    public currentScenario = 0;\n\n    constructor(public name: string,\n                public campaignSpec: ICampaignSpec,\n                public characters: AHCharacter[],\n                public currentBagSpec: TokenBagSpec,\n                currentScenario = 0) {\n        this.startCampaign(currentScenario);\n    }\n\n    public static start(campaignSpec: ICampaignSpec, characters: AHCharacter[], level: AHLevel): Campaign {\n        return new Campaign(campaignSpec.name, campaignSpec, characters, campaignSpec.bagSpecsByLevel[level]);\n    }\n\n\n    startCampaign(scenarioNum = 0) {\n        this.currentScenario = scenarioNum;\n        let scenarioIndex = 0;\n        while (scenarioIndex <= scenarioNum) {\n            this.currentScenario = scenarioIndex;\n            scenarioIndex++;\n        }\n    }\n\n    getScenarioSpec() {\n        return this.campaignSpec.scenarios[this.currentScenario];\n    }\n\n    addTokensToBagSpec(...tokens: TokenSpec[]) {\n        this.currentBagSpec = addTokens(this.currentBagSpec, ...tokens);\n    }\n\n    nextScenario() {\n        if ((this.currentScenario + 1 ) < this.campaignSpec.scenarios.length) {\n            this.currentScenario++;\n            // console.log(\"Current scenario index\", this.currentScenario, \"name\", this.campaignSpec.scenarios[this.currentScenario].name);\n            if (this.currentScenario >= this.campaignSpec.scenarios.length) {\n                // TODO: Modify current bag spec depending on resolution or preparation of new scenario\n                // advanceScenario\n            }\n        }\n        return this.getScenarioSpec();\n    }\n\n    // Returns to the previous scenario with the bag as it was\n    prevScenario() {\n        if (this.currentScenario  > 0) {\n            this.currentScenario--;\n        }\n        return this.getScenarioSpec();\n    }\n}\n","import {EffectSpec} from \"./Token\";\n\nexport interface AHCharacter {\n    id: string,\n    name: string;\n    shortName: string;\n    elderSignEffect: EffectSpec;\n}\n\n\nexport const AHCharacters: {[key: string]: AHCharacter} = {\n    JoeDiamond: {id: \"JoeDiamond\", name: \"Joe Diamond\", shortName: \"Joe\", elderSignEffect: () => 1},\n    DianaStanley: {id: \"DianaStanley\", name: \"Diana Stanley\", shortName: \"Diana\", elderSignEffect: () => 2},\n}","import {\n    addTokens,\n    buildBagSpec,\n    FALLO_AUTOMATICO,\n    removeToken, seal,\n    tokenAverage, TokenBag,\n    TokenBagSpec,\n    tokenSpecDef\n} from \"./Token\";\nimport {AHLevel, Campaign, ICampaignSpec} from \"./Campaign\";\nimport {IScenarioSpec} from \"./Scenario\";\nimport {AHCharacter, AHCharacters} from \"./AHCharacter\";\n\n\nfunction easy(): TokenBagSpec {\n    return buildBagSpec(\n        tokenSpecDef(1, 1, false, \"elderSign\"),\n        tokenSpecDef(1, 2),\n        tokenSpecDef(0, 3),\n        tokenSpecDef(-1, 2),\n        tokenSpecDef(-2,1),\n        tokenSpecDef(-3, 1),\n        tokenSpecDef(0, 2, true, \"Calavera\"),\n        FALLO_AUTOMATICO\n    );\n}\nexport function normal(): TokenBagSpec {\n    return buildBagSpec(\n        tokenSpecDef(1, 1, false, \"elderSign\"),\n        tokenSpecDef(1, 1),\n        tokenSpecDef(0, 2),\n        tokenSpecDef(-1, 2),\n        tokenSpecDef(-2,2),\n        tokenSpecDef(-3, 1),\n        tokenSpecDef(-4, 1),\n        tokenSpecDef(0, 2, true, \"Calavera\"),\n        FALLO_AUTOMATICO\n        );\n}\nfunction hard (): TokenBagSpec {\n    return addTokens(\n            removeToken(normal(), \"1\"),\n            tokenSpecDef(-5, 1),\n    )\n}\n\nfunction expert (): TokenBagSpec {\n    return buildBagSpec(\n        tokenSpecDef(1, 1, false, \"elderSign\"),\n        tokenSpecDef(0, 1),\n        tokenSpecDef(-1, 2),\n        tokenSpecDef(-2,2),\n        tokenSpecDef(-3, 1),\n        tokenSpecDef(-4, 1),\n        tokenSpecDef(-6, 1),\n        tokenSpecDef(-8, 1),\n        tokenSpecDef(0, 2, true, \"Calavera\"),\n        FALLO_AUTOMATICO\n    );\n}\n\nfunction Prologo(): IScenarioSpec {\n    return {\n        name: \"Desaparición en la finca del crepúsculo\",\n        scenarioEffectSpec: [\n            {name: \"elderSign\", effect: (tokenBag) => tokenBag.character.elderSignEffect(tokenBag)},\n            {name: \"Calavera\", effect: () => -3},\n        ],\n        contextSpec: {\n            valuesSpec: []\n        }\n    };\n}\n\nfunction LaHoraBruja(): IScenarioSpec {\n    return {\n        name: \"La hora bruja\",\n        scenarioEffectSpec: [\n            { name: \"elderSign\", effect: (tokenBag) => tokenBag.character.elderSignEffect(tokenBag) },\n            { name: \"Calavera\", effect: () => -1 },\n            { name: \"Lápida\", effect: () => -3 },\n            { name: \"Antiguo\", effect: () => -3 },\n        ],\n        contextSpec: {\n            valuesSpec: []\n        }\n    }\n}\n\nfunction ALasPuertasDeLaMuerte(): IScenarioSpec {\n    return {\n        name: \"A las puertas de la muerte\",\n        scenarioEffectSpec: [\n            { name: \"elderSign\", effect: (tokenBag) => tokenBag.character.elderSignEffect(tokenBag) },\n            { name: \"Calavera\", effect: (tokenBag) => tokenBag.context[\"Lugar Embrujado\"] ? -3 : -1 },\n            { name: \"Lápida\", effect: () => -2 },\n            { name: \"Antiguo\", effect: () => -2 },\n        ],\n        contextSpec: {\n            valuesSpec: [{\n                name: \"Lugar Embrujado\",\n                description: \"Lugar Embrujado\",\n                type: \"boolean\",\n                initialValue: false\n            }]\n        }\n    }\n}\n\nfunction ElNombreSecreto(): IScenarioSpec {\n    return {\n        name: \"El nombre secreto\",\n        scenarioEffectSpec: [\n            { name: \"elderSign\", effect: (tokenBag) => tokenBag.character.elderSignEffect(tokenBag) },\n            { name: \"Calavera\", effect: (tokenBag) => tokenBag.context[\"Lugar Extradimensional\"] ? -3 : -1 },\n            { name: \"Sectario\", effect: tokenBag => tokenAverage(seal(tokenBag, \"Sectario\"))},\n            { name: \"Lápida\", effect: () => -2 },\n            { name: \"Antiguo\", effect: () => -3 },\n        ],\n        contextSpec: {\n            valuesSpec: [{\n                name: \"Lugar Extradimensional\",\n                description: \"Lugar Extradimensional\",\n                type: \"boolean\",\n                initialValue: false\n            }]\n        }\n    }\n}\n\nfunction LaPagaDelPecado(): IScenarioSpec {\n    return {\n        name: \"La paga del pecado\",\n        scenarioEffectSpec: [\n            {name: \"elderSign\", effect: (tokenBag) => tokenBag.character.elderSignEffect(tokenBag)},\n            {name: \"Calavera\", effect: (tokenBag) => 0 - (tokenBag.context[\"Asuntos inconclusos\"] as number)},\n            {name: \"Sectario\", effect: (tokenBag) => tokenBag.context[\"Atacando/Evitando Hereje\"] ? -4 : -3 },\n            {name: \"Lápida\", effect: () => -3},\n            {name: \"Antiguo\", effect: () => -2},\n        ],\n        contextSpec: {\n            valuesSpec: [\n                {\n                name: \"Asuntos inconclusos\",\n                description: \"Asuntos inconclusos\",\n                type: \"number\",\n                initialValue: 0\n                 },\n                {\n                    name: \"Atacando/Evitando Hereje\",\n                    description: \"Atacando/Evitando Hereje\",\n                    type: \"boolean\",\n                    initialValue: false\n                }\n            ]\n        }\n    };\n}\n\nfunction PorElBienComun(): IScenarioSpec {\n    const MAXIMA_PERDICION = \"Máxima Perdición\";\n    return {\n        name: \"Por el bien común\",\n        scenarioEffectSpec: [\n            {name: \"elderSign\", effect: (tokenBag) => tokenBag.character.elderSignEffect(tokenBag)},\n            {name: \"Calavera\", effect: (tokenBag) => 0 - (tokenBag.context[MAXIMA_PERDICION] as number)},\n            {name: \"Sectario\", effect: tokenBag => tokenAverage(seal(tokenBag, \"Sectario\")) - 2},\n            {name: \"Lápida\", effect: () => -3},\n            {name: \"Antiguo\", effect: () => -3},\n        ],\n        contextSpec: {\n            valuesSpec: [{\n                name: MAXIMA_PERDICION,\n                description: MAXIMA_PERDICION,\n                type: \"number\",\n                initialValue: 0\n            }]\n        }\n    };\n}\n\nfunction UnionYDesilusion(): IScenarioSpec {\n    const ACCION_CIRCULO = \"Acción círculo\";\n    return {\n        name: \"Unión y desilusión\",\n        scenarioEffectSpec: [\n            {name: \"elderSign\", effect: (tokenBag) => tokenBag.character.elderSignEffect(tokenBag)},\n            {name: \"Calavera\", effect: (tokenBag) =>\n                    tokenBag.context[ACCION_CIRCULO] ? tokenAverage(seal(tokenBag, \"Calavera\")) - 2 : -2},\n            {name: \"Sectario\", effect: () => -3},\n            {name: \"Lápida\", effect: () => -3},\n            {name: \"Antiguo\", effect: () => -3},\n        ],\n        contextSpec: {\n            valuesSpec: [{\n                name: ACCION_CIRCULO,\n                description: ACCION_CIRCULO,\n                type: \"boolean\",\n                initialValue: false\n            }]\n        }\n    };\n}\n\nfunction EnLasGarrasDelCaos(): IScenarioSpec {\n    const PERDICION_Y_BRECHA = \"Perdición y brecha en tu lugar\";\n    const getPerdicionYBrecha = (tokenBag: TokenBag) => {\n        return tokenBag.context[PERDICION_Y_BRECHA] as number;\n    }\n\n    return {\n        name: \"En las garras del caos\",\n        scenarioEffectSpec: [\n            {name: \"elderSign\", effect: (tokenBag) => tokenBag.character.elderSignEffect(tokenBag)},\n            {name: \"Calavera\", effect: (tokenBag) => 0 - getPerdicionYBrecha(tokenBag)},\n            {name: \"Sectario\", effect: (tokenBag) => {\n                //Creates a new bag and a new context for this calculation\n                    const potentialBag = seal(tokenBag, \"Sectario\");\n                    potentialBag.context = {\n                        [PERDICION_Y_BRECHA]: Math.max(3, getPerdicionYBrecha(tokenBag) + 1),\n                    }\n                    return tokenAverage(potentialBag);\n                }},\n            {name: \"Lápida\", effect: () => -2},\n            {name: \"Antiguo\", effect: () => -3},\n        ],\n        contextSpec: {\n            valuesSpec: [{\n                name: PERDICION_Y_BRECHA,\n                description: PERDICION_Y_BRECHA,\n                type: \"number\",\n                initialValue: 0\n            }]\n        }\n    };\n}\n\nfunction AnteElTronoNegro(): IScenarioSpec {\n    const PERDICION_EN_AZATHOTH = \"Perdición en Azathoth\";\n    const getHalfDoomInAzathot = (tokenBag: TokenBag) => {\n        return Math.ceil((tokenBag.context[PERDICION_EN_AZATHOTH] as number) / 2);\n    }\n\n    return {\n        name: \"Ante el trono negro\",\n        scenarioEffectSpec: [\n            {name: \"elderSign\", effect: (tokenBag) => tokenBag.character.elderSignEffect(tokenBag)},\n            {name: \"Calavera\", effect: (tokenBag) => 0 - Math.max(2, getHalfDoomInAzathot(tokenBag))},\n            {name: \"Sectario\", effect: (tokenBag) => tokenAverage(seal(tokenBag, \"Sectario\"))},\n            {name: \"Lápida\", effect: () => -2},\n            {name: \"Antiguo\", effect: () => -4},\n        ],\n        contextSpec: {\n            valuesSpec: [{\n                name: PERDICION_EN_AZATHOTH,\n                description: PERDICION_EN_AZATHOTH,\n                type: \"number\",\n                initialValue: 0\n            }]\n        }\n    };\n}\n\nexport function buildElCirculoRotoCampaignSpec(): ICampaignSpec {\n    return {\n        id: \"TheCircleUndone\",\n        name: \"El círculo roto\",\n        scenarios: [\n            Prologo(),\n            LaHoraBruja(), ALasPuertasDeLaMuerte(), ElNombreSecreto(), LaPagaDelPecado(),\n            PorElBienComun(), UnionYDesilusion(), EnLasGarrasDelCaos(), AnteElTronoNegro()\n        ],\n        bagSpecsByLevel: {\n            easy: easy(),\n            normal: normal(),\n            hard: hard(),\n            expert: expert(),\n        }\n    }\n}\n\nexport function startElCirculoRoto(characters: AHCharacter[], level: AHLevel) {\n    return Campaign.start(buildElCirculoRotoCampaignSpec(), characters, level);\n}\n\nexport function startAlvaroElCirculoRotoLPDP() {\n    const campaign = startElCirculoRoto([\n        AHCharacters[\"JoeDiamond\"], AHCharacters[\"DianaStanley\"],\n        // {name: \"Joe Diamond\", shortName: \"Joe\", elderSignEffect: () => 1},\n        // {name: \"Diana Stanley\", shortName: \"Diana\", elderSignEffect: () => 2},\n    ], \"normal\");\n    campaign.addTokensToBagSpec(\n        tokenSpecDef(0, 2, true, \"Lápida\"), // <- La hora bruja: Los inv han aceptado su destino\n        tokenSpecDef(0, 1, true, \"Sectario\"), // <- El precio del progreso, unirme a la logia\n        tokenSpecDef(0, 1, true, \"Calavera\"), // <- El nombre secreto, coger el Libro Negro\n        // tokenSpecDef(0, 1, true, \"Antiguo\"),\n        // tokenSpecDef(-5, 1, false),\n    );\n    campaign.startCampaign(0);\n    return campaign;\n}","import {CombinedState, combineReducers, Reducer} from \"redux\";\nimport {Campaign} from \"./tok/Campaign\";\nimport {initContext, IScenarioSpec} from \"./tok/Scenario\";\nimport {incDecContextNatural, ScenarioContext} from \"./tok/Token\";\nimport {startAlvaroElCirculoRotoLPDP} from \"./tok/ElCirculoRoto\";\nimport {\n    CHANGE_CHARACTER,\n    CHANGE_SCENARIO,\n    CHANGE_SKILL,\n    CHANGE_TEST,\n    IAppAction,\n    ICharacterAction,\n    IContextAction,\n    IIncDecAction,\n    INC_DEC_CONTEXT_VALUE,\n    IScenarioAction,\n    NEXT_SCENARIO,\n    PREV_SCENARIO,\n    TOGGLE_CONTEXT_VALUE\n} from \"./AppActions\";\nimport {AppState} from \"./AppState\";\nimport {SkillTest} from \"./tok/SkillTest\";\nimport {AHCharacter} from \"./tok/AHCharacter\";\nimport {incDecNatural} from \"./Utils\";\n\n\nconst defaultCampaign = startAlvaroElCirculoRotoLPDP();\n\nconst  selectedCampaign: Reducer<Campaign, IAppAction> = (state: Campaign = defaultCampaign, action: IAppAction) => {\n    switch (action.type) {\n        case NEXT_SCENARIO:\n            state.nextScenario();\n            return state;\n        case PREV_SCENARIO:\n            state.prevScenario();\n            return state;\n        default:\n            return state;\n    }\n}\n\n\nconst firstScenario = defaultCampaign.getScenarioSpec();\nconst selectedScenario: Reducer<IScenarioSpec, IAppAction> = (state = firstScenario, action: IAppAction) => {\n    switch (action.type) {\n        case CHANGE_SCENARIO:\n            return (action as IScenarioAction).scenarioSpec;\n        default:\n            return state;\n    }\n}\n\nconst selectedCharacter: Reducer<AHCharacter, IAppAction> = (state = defaultCampaign.characters[0], action: IAppAction) => {\n    switch (action.type) {\n        case CHANGE_CHARACTER:\n            return (action as ICharacterAction).character;\n        default:\n            return state;\n    }\n}\nconst initialContext = initContext(firstScenario.contextSpec);\nconst gameContext: Reducer<ScenarioContext, IAppAction> = (gameContext = initialContext, action: IAppAction) => {\n    switch (action.type) {\n        case CHANGE_SCENARIO:\n            return initContext((action as IScenarioAction).scenarioSpec.contextSpec);\n        case INC_DEC_CONTEXT_VALUE:\n            const contextAction = action as IContextAction & IIncDecAction;\n            const key = contextAction.key;\n            return Object.assign({}, gameContext, {\n                [key]: incDecContextNatural(gameContext, key, contextAction.incDec)\n            });\n        case TOGGLE_CONTEXT_VALUE:\n            const contextToggleAction = action as IContextAction;\n            return Object.assign({}, gameContext, {\n                [contextToggleAction.key]: !(gameContext[contextToggleAction.key] as boolean)\n            });\n        default:\n            return gameContext;\n    }\n}\n\nconst initialSkillTest = {skill: 4, test: 2} as SkillTest;\nconst skillTest: Reducer<SkillTest, IAppAction> = (state = initialSkillTest, action) => {\n    const skillTestAction = action as IIncDecAction;\n    switch (action.type) {\n        case CHANGE_SKILL:\n            return Object.assign({}, state, {\n                skill: incDecNatural(state.skill, skillTestAction.incDec)\n            });\n        case CHANGE_TEST:\n            return Object.assign({}, state, {\n                test: incDecNatural(state.test, skillTestAction.incDec)\n            });\n        default:\n            return state;\n\n    }\n}\n\nexport const appReducers: Reducer<CombinedState<AppState>, IAppAction>  = combineReducers<AppState, IAppAction>({\n    selectedCampaign,  selectedCharacter, selectedScenario, gameContext, skillTest\n});\n","import {createStore, Store} from \"redux\";\nimport {appReducers} from \"./AppReducers\";\nimport {IAppAction} from \"./AppActions\";\nimport {AppState} from \"./AppState\";\nimport {Campaign, Campaigns, ICampaignSpec} from \"./tok/Campaign\";\nimport {SkillTest} from \"./tok/SkillTest\";\nimport {startAlvaroElCirculoRotoLPDP} from \"./tok/ElCirculoRoto\";\nimport {ScenarioContext, TokenBagSpec} from \"./tok/Token\";\nimport {AHCharacters} from \"./tok/AHCharacter\";\nimport {initContext} from \"./tok/Scenario\";\n\n\ninterface IStorageStage {\n    name: string;\n    campaignSpecId: string;\n    bagSpec: TokenBagSpec;\n    characters: string[];\n    currentScenario: number;\n    currentCharacter: string;\n    currentContext: ScenarioContext;\n}\nfunction loadStorageStage(): IStorageStage | undefined {\n    const storageStateString = localStorage.getItem(\"ahtok.kortsoft.net/state\");\n    return storageStateString ? JSON.parse(storageStateString) : undefined;\n}\n\n\nfunction initialState():AppState {\n    function defaultCampaign() {\n        return startAlvaroElCirculoRotoLPDP();\n    }\n    const preloadCampaign = loadStorageStage();\n    if (preloadCampaign) {\n        const campaignSpec: ICampaignSpec = Campaigns[preloadCampaign.campaignSpecId];\n        const characters = preloadCampaign.characters.map(cId => AHCharacters[cId]);\n        const campaign = new Campaign(\n            preloadCampaign.name, campaignSpec, characters,\n            preloadCampaign.bagSpec, preloadCampaign.currentScenario);\n        const character = AHCharacters[preloadCampaign.currentCharacter];\n        return {\n            selectedCampaign: campaign,\n            selectedScenario: campaign.getScenarioSpec(),\n            selectedCharacter: character,\n            skillTest: {skill: 4, test: 2} as SkillTest,\n            gameContext: preloadCampaign.currentContext\n        }\n    } else {\n        const campaign = defaultCampaign();\n        const currentScenarioSpec = campaign.getScenarioSpec();\n        return {\n            selectedCampaign: campaign,\n            selectedScenario: currentScenarioSpec,\n            selectedCharacter: campaign.characters[0],\n            skillTest: {skill: 4, test: 2} as SkillTest,\n            gameContext: initContext(currentScenarioSpec.contextSpec)\n        };\n    }\n\n}\n\nconst appState = initialState();\nconsole.log(\"Loaded initial state\", appState);\nexport let store: Store<AppState, IAppAction> =\n    createStore<AppState, IAppAction, {}, {}>(appReducers, appState);\n\nexport function resetStore() {\n    store = createStore<AppState, IAppAction, {}, {}>(appReducers);\n}\n\nstore.subscribe(() => {\n    const campaign = store.getState().selectedCampaign;\n    const newStorageCampaign: IStorageStage = {\n        name: campaign.name,\n        campaignSpecId: campaign.campaignSpec.id,\n        bagSpec: campaign.currentBagSpec,\n        characters: campaign.characters.map(c => c.id),\n        currentScenario: campaign.currentScenario,\n        currentCharacter: store.getState().selectedCharacter.id,\n        currentContext: store.getState().gameContext\n    };\n    localStorage.setItem(\"ahtok.kortsoft.net/state\", JSON.stringify(newStorageCampaign));\n});","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport {CurrentScenarioPassZone} from \"./tok/ScenarioPassZone\";\nimport {Scenario} from \"./tok/Scenario\";\nimport {Box, Button, Container, CssBaseline, Typography} from \"@material-ui/core\";\nimport {ThemeProvider} from \"@material-ui/core/styles\";\nimport {tokTheme} from \"./TokTheme\";\nimport {store} from \"./AppStore\";\nimport {Provider} from \"react-redux\";\nimport {changeScenario as changeScenarioAction} from \"./AppActions\";\n\n\nfunction App() {\n    const campaign = store.getState().selectedCampaign;\n\n    function changeScenario(scenario: Scenario) {\n        store.dispatch(changeScenarioAction(scenario));\n    }\n\n    const themeSpec = tokTheme();\n    return (\n    <ThemeProvider theme={themeSpec.theme}>\n        <CssBaseline>\n            <Provider store={store}>\n                <div className=\"App\">\n                    <Typography style={{fontFamily: themeSpec.headerFontFamily, textAlign: \"center\"}}\n                                variant=\"h2\" color=\"secondary\" variantMapping={{h1: \"header\"}} className=\"App-header\">\n                        {campaign.name}\n                    </Typography>\n                    <Container className=\"MainContainer\" maxWidth=\"lg\">\n                        <Box textAlign={\"center\"}>\n                            <Button color=\"secondary\" onClick={() => changeScenario(campaign.prevScenario())}>Prev</Button>\n                            <Button color=\"secondary\" onClick={() => changeScenario(campaign.nextScenario())}>Next</Button>\n                        </Box>\n                        <CurrentScenarioPassZone />\n                    </Container>\n                </div>\n            </Provider>\n        </CssBaseline>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import {createMuiTheme, responsiveFontSizes} from \"@material-ui/core\";\n\nexport function tokTheme() {\n    const baseFontFamily = [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n    ];\n    const birminghamFontFamily = \"Birmingham\";\n    const uglyQuaFontFamily = 'UglyQua';\n    const theme = responsiveFontSizes(createMuiTheme({\n        typography: {\n            fontFamily: [uglyQuaFontFamily].concat(baseFontFamily).join(','),\n            fontSize: 14\n        },\n        palette: {\n            tonalOffset: 1,\n            type: \"dark\",\n            primary: {\n                main: \"#205b57\",\n            },\n            secondary: {\n                main: \"#f4ebcc\",\n            }\n        }\n    }));\n\n    const headerFontFamily = [uglyQuaFontFamily].concat(baseFontFamily).join(',');\n    return {\n        theme,\n        headerFontFamily\n    };\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n        <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}